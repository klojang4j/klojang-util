<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Klojang Check"><sessioninfo id="ayco-Latitude-5430-67bbafae" start="1676468446188" dump="1676468446745"/><package name="org/klojang/util/exception"><class name="org/klojang/util/exception/UncheckedException" sourcefilename="UncheckedException.java"><method name="peal" desc="(Ljava/lang/Throwable;)Ljava/lang/Throwable;" line="49"><counter type="INSTRUCTION" missed="14" covered="8"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unwrap" desc="()Ljava/lang/Throwable;" line="94"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCustomMessage" desc="()Ljava/util/Optional;" line="106"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="116"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLocalizedMessage" desc="()Ljava/lang/String;" line="127"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCause" desc="()Ljava/lang/Throwable;" line="137"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printStackTrace" desc="()V" line="145"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printStackTrace" desc="(Ljava/io/PrintStream;)V" line="153"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printStackTrace" desc="(Ljava/io/PrintWriter;)V" line="161"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStackTrace" desc="()[Ljava/lang/StackTraceElement;" line="171"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setStackTrace" desc="([Ljava/lang/StackTraceElement;)V" line="179"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="189"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initCause" desc="(Ljava/lang/Throwable;)Ljava/lang/Throwable;" line="197"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="59" covered="40"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="17" covered="10"/><counter type="COMPLEXITY" missed="13" covered="4"/><counter type="METHOD" missed="11" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/util/exception/RootException" sourcefilename="RootException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="41"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rootOf" desc="(Ljava/lang/Throwable;)Ljava/lang/Throwable;" line="57"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unwrap" desc="()Ljava/lang/Throwable;" line="70"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCustomMessage" desc="()Ljava/util/Optional;" line="82"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLocalizedMessage" desc="()Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCause" desc="()Ljava/lang/Throwable;" line="113"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printStackTrace" desc="()V" line="121"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printStackTrace" desc="(Ljava/io/PrintStream;)V" line="129"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printStackTrace" desc="(Ljava/io/PrintWriter;)V" line="137"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStackTrace" desc="()[Ljava/lang/StackTraceElement;" line="147"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="157"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initCause" desc="(Ljava/lang/Throwable;)Ljava/lang/Throwable;" line="165"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setStackTrace" desc="([Ljava/lang/StackTraceElement;)V" line="173"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$rootOf$0" desc="(Ljava/lang/Throwable;)Ljava/lang/Throwable;" line="57"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="53" covered="27"/><counter type="LINE" missed="17" covered="5"/><counter type="COMPLEXITY" missed="12" covered="4"/><counter type="METHOD" missed="12" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/util/exception/ExceptionOrigin" sourcefilename="ExceptionOrigin.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;Ljava/lang/String;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDetailedMessage" desc="()Ljava/lang/String;" line="65"><counter type="INSTRUCTION" missed="5" covered="95"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="21"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="111"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getException" desc="()Ljava/lang/Throwable;" line="120"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="geStackTraceElement" desc="()Ljava/lang/StackTraceElement;" line="129"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModule" desc="()Ljava/lang/String;" line="140"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClassName" desc="()Ljava/lang/String;" line="151"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMethod" desc="()Ljava/lang/String;" line="162"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLine" desc="()I" line="173"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAbsoluteOrigin" desc="()Z" line="185"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="search" desc="(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/StackTraceElement;" line="193"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAbsoluteOrigin" desc="()Ljava/lang/StackTraceElement;" line="207"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="71" covered="179"/><counter type="BRANCH" missed="15" covered="19"/><counter type="LINE" missed="12" covered="39"/><counter type="COMPLEXITY" missed="17" covered="12"/><counter type="METHOD" missed="8" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="UncheckedException.java"><line nr="49" mi="3" ci="3" mb="1" cb="1"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="3" mb="1" cb="1"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="40"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="17" covered="10"/><counter type="COMPLEXITY" missed="13" covered="4"/><counter type="METHOD" missed="11" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RootException.java"><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="11" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="173" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="53" covered="27"/><counter type="LINE" missed="17" covered="5"/><counter type="COMPLEXITY" missed="12" covered="4"/><counter type="METHOD" missed="12" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExceptionOrigin.java"><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="2"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="2"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="2"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="1" cb="1"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="8" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="2"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="1" cb="1"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="9" ci="0" mb="2" cb="0"/><line nr="151" mi="9" ci="0" mb="2" cb="0"/><line nr="162" mi="9" ci="0" mb="2" cb="0"/><line nr="173" mi="9" ci="0" mb="2" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="2" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="11" ci="0" mb="2" cb="0"/><line nr="193" mi="0" ci="8" mb="0" cb="2"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="1" cb="1"/><line nr="196" mi="0" ci="16" mb="0" cb="2"/><line nr="197" mi="0" ci="5" mb="0" cb="2"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="2"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="71" covered="179"/><counter type="BRANCH" missed="15" covered="19"/><counter type="LINE" missed="12" covered="39"/><counter type="COMPLEXITY" missed="17" covered="12"/><counter type="METHOD" missed="8" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="183" covered="246"/><counter type="BRANCH" missed="17" covered="21"/><counter type="LINE" missed="46" covered="54"/><counter type="COMPLEXITY" missed="42" covered="20"/><counter type="METHOD" missed="31" covered="12"/><counter type="CLASS" missed="0" covered="3"/></package><package name="org/klojang/util"><class name="org/klojang/util/ResizeMethod" sourcefilename="ResizeMethod.java"><method name="getMinIncrease" desc="(III)I" line="107"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resize" desc="(ID)I" line="127"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resize" desc="(IDI)I" line="152"><counter type="INSTRUCTION" missed="25" covered="109"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="3" covered="20"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="155"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="3" covered="29"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/util/IOMethods" sourcefilename="IOMethods.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContents" desc="(Ljava/lang/String;)Ljava/lang/String;" line="48"><counter type="INSTRUCTION" missed="4" covered="24"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContents" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;" line="67"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContents" desc="(Ljava/lang/Class;Ljava/lang/String;I)Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="4" covered="33"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContents" desc="(Ljava/io/InputStream;)Ljava/lang/String;" line="98"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContents" desc="(Ljava/io/InputStream;I)Ljava/lang/String;" line="110"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="124"><counter type="INSTRUCTION" missed="4" covered="31"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="140"><counter type="INSTRUCTION" missed="4" covered="31"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readBytes" desc="(Ljava/lang/Class;Ljava/lang/String;)[B" line="158"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readBytes" desc="(Ljava/lang/Class;Ljava/lang/String;I)[B" line="171"><counter type="INSTRUCTION" missed="4" covered="33"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readBytes" desc="(Ljava/io/InputStream;)[B" line="190"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readBytes" desc="(Ljava/io/InputStream;I)[B" line="204"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pipe" desc="(Ljava/io/InputStream;Ljava/io/OutputStream;)V" line="218"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pipe" desc="(Ljava/io/InputStream;Ljava/io/OutputStream;I)V" line="231"><counter type="INSTRUCTION" missed="4" covered="47"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTempFile" desc="()Ljava/io/File;" line="259"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTempFile" desc="(Ljava/lang/Class;)Ljava/io/File;" line="276"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTempFile" desc="(Ljava/lang/Class;Z)Ljava/io/File;" line="296"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTempFile" desc="(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/io/File;" line="318"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTempFile" desc="(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Z)Ljava/io/File;" line="345"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTempDir" desc="()Ljava/io/File;" line="363"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createTempDir" desc="(Ljava/lang/Class;)Ljava/io/File;" line="381"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createTempDir" desc="(Ljava/lang/Class;Z)Ljava/io/File;" line="401"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createTempDir" desc="(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/io/File;" line="425"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTempDir" desc="(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Z)Ljava/io/File;" line="454"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rm" desc="(Ljava/lang/String;)V" line="466"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rm" desc="(Ljava/io/File;)V" line="483"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rm" desc="(Ljava/nio/file/Path;)V" line="494"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCreateTempFile" desc="(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Z)Ljava/io/File;" line="516"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCreateTempDir" desc="(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Z)Ljava/io/File;" line="532"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="uniquePath" desc="(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="545"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tmpDir" desc="()Ljava/lang/String;" line="565"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$rm$0" desc="(Ljava/lang/String;)Ljava/nio/file/Path;" line="466"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="540"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="55" covered="468"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="22" covered="94"/><counter type="COMPLEXITY" missed="5" covered="36"/><counter type="METHOD" missed="4" covered="29"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/util/IOMethods$1" sourcefilename="IOMethods.java"><method name="&lt;init&gt;" desc="()V" line="496"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="postVisitDirectory" desc="(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;" line="500"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitFile" desc="(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;" line="507"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/util/ClassMethods" sourcefilename="ClassMethods.java"><method name="&lt;init&gt;" desc="()V" line="68"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cast" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="84"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isA" desc="(Ljava/lang/Object;Ljava/lang/Class;)Z" line="95"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSubtype" desc="(Ljava/lang/Class;Ljava/lang/Class;)Z" line="112"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSupertype" desc="(Ljava/lang/Class;Ljava/lang/Class;)Z" line="129"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPrimitiveNumber" desc="(Ljava/lang/Class;)Z" line="143"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPrimitiveArray" desc="(Ljava/lang/Object;)Z" line="155"><counter type="INSTRUCTION" missed="6" covered="13"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPrimitiveArray" desc="(Ljava/lang/Class;)Z" line="170"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDeeplyPrimitiveArray" desc="(Ljava/lang/Class;)Z" line="186"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWrapper" desc="(Ljava/lang/Class;)Z" line="199"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAutoUnboxedAs" desc="(Ljava/lang/Class;Ljava/lang/Class;)Z" line="217"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAutoBoxedAs" desc="(Ljava/lang/Class;Ljava/lang/Class;)Z" line="236"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="box" desc="(Ljava/lang/Class;)Ljava/lang/Class;" line="249"><counter type="INSTRUCTION" missed="1" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unbox" desc="(Ljava/lang/Class;)Ljava/lang/Class;" line="261"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAncestors" desc="(Ljava/lang/Class;)Ljava/util/List;" line="273"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="countAncestors" desc="(Ljava/lang/Class;)I" line="290"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllInterfaces" desc="(Ljava/lang/Class;)Ljava/util/Set;" line="310"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectInterfaces" desc="(Ljava/lang/Class;Ljava/util/Set;)V" line="321"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="className" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="336"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="className" desc="(Ljava/lang/Class;)Ljava/lang/String;" line="350"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="simpleClassName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="367"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="simpleClassName" desc="(Ljava/lang/Class;)Ljava/lang/String;" line="381"><counter type="INSTRUCTION" missed="4" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="describe" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="414"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeDefault" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="438"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="159" covered="281"/><counter type="BRANCH" missed="16" covered="30"/><counter type="LINE" missed="32" covered="56"/><counter type="COMPLEXITY" missed="20" covered="28"/><counter type="METHOD" missed="10" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/util/ModulePrivate" sourcefilename="ModulePrivate.java"/><class name="org/klojang/util/MutableInt" sourcefilename="MutableInt.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="20"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/klojang/util/MutableInt;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()I" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pp" desc="()I" line="49"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ppi" desc="()I" line="58"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mm" desc="()I" line="67"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mmi" desc="()I" line="76"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plusIs" desc="(I)I" line="86"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plusIs" desc="(Lorg/klojang/util/MutableInt;)I" line="96"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minIs" desc="(I)I" line="106"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minIs" desc="(Lorg/klojang/util/MutableInt;)I" line="116"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(I)I" line="126"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Lorg/klojang/util/MutableInt;)I" line="136"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eq" desc="(I)Z" line="146"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eq" desc="(Lorg/klojang/util/MutableInt;)Z" line="156"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ne" desc="(I)Z" line="166"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ne" desc="(Lorg/klojang/util/MutableInt;)Z" line="176"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="gt" desc="(I)Z" line="187"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="gt" desc="(Lorg/klojang/util/MutableInt;)Z" line="198"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lt" desc="(I)Z" line="209"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lt" desc="(Lorg/klojang/util/MutableInt;)Z" line="220"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="gte" desc="(I)Z" line="231"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="gte" desc="(Lorg/klojang/util/MutableInt;)Z" line="242"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lte" desc="(I)Z" line="253"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lte" desc="(Lorg/klojang/util/MutableInt;)Z" line="264"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()I" line="273"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="282"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="295"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="317"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="281"/><counter type="BRANCH" missed="0" covered="44"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="0" covered="52"/><counter type="METHOD" missed="0" covered="30"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/util/MathMethods" sourcefilename="MathMethods.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="abs" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="65"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divUp" desc="(II)I" line="81"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divDown" desc="(II)I" line="93"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divHalfUp" desc="(II)I" line="107"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divHalfDown" desc="(II)I" line="121"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nearest" desc="(III)I" line="143"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGridCount" desc="(III)I" line="158"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGridCount" desc="(II)I" line="172"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOfLastGrid" desc="(II)I" line="186"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countRowsOnLastGrid" desc="(II)I" line="199"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countEmptyRowsOnLastGrid" desc="(II)I" line="215"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGrid" desc="(III)I" line="235"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRow" desc="(III)I" line="253"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getColumn" desc="(II)I" line="270"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRowCM" desc="(II)I" line="284"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getColumnCM" desc="(III)I" line="298"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGridRowColumn" desc="(III)[I" line="314"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGridRowColumnCM" desc="(III)[I" line="331"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toGrid" desc="([III)[[[I" line="351"><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toGrid" desc="([IIII)[[[I" line="386"><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toGrid" desc="([Ljava/lang/Object;II)[[[Ljava/lang/Object;" line="422"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toGrid" desc="([Ljava/lang/Object;IILjava/lang/Object;)[[[Ljava/lang/Object;" line="458"><counter type="INSTRUCTION" missed="0" covered="92"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toGridCM" desc="([III)[[[I" line="493"><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toGridCM" desc="([IIII)[[[I" line="528"><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toGridCM" desc="([Ljava/lang/Object;II)[[[Ljava/lang/Object;" line="564"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toGridCM" desc="([Ljava/lang/Object;IILjava/lang/Object;)[[[Ljava/lang/Object;" line="600"><counter type="INSTRUCTION" missed="0" covered="92"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createEmptyGrids" desc="([Ljava/lang/Object;III)[[[Ljava/lang/Object;" line="628"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$9" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="44"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$8" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$7" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="42"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$6" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="41"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$5" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="40"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$4" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="39"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$3" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="38"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$2" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="37"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$1" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="36"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="35"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="1218"/><counter type="BRANCH" missed="0" covered="96"/><counter type="LINE" missed="2" covered="194"/><counter type="COMPLEXITY" missed="1" covered="86"/><counter type="METHOD" missed="1" covered="38"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/util/ArrayType" sourcefilename="ArrayType.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;I)V" line="114"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="describe" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="47"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forClass" desc="(Ljava/lang/Class;)Lorg/klojang/util/ArrayType;" line="66"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forArray" desc="(Ljava/lang/Object;)Lorg/klojang/util/ArrayType;" line="79"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dimensions" desc="(Ljava/lang/Class;)I" line="90"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toClass" desc="()Ljava/lang/Class;" line="134"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toClass" desc="(Ljava/lang/Class;)Ljava/lang/Class;" line="146"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="box" desc="()Ljava/lang/Class;" line="159"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unbox" desc="()Ljava/lang/Class;" line="172"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toClass" desc="(I)Ljava/lang/Class;" line="184"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="boxed" desc="()Lorg/klojang/util/ArrayType;" line="194"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unboxed" desc="()Lorg/klojang/util/ArrayType;" line="203"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="217"><counter type="INSTRUCTION" missed="5" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="arrayClassName" desc="()Ljava/lang/String;" line="237"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/Class;)Lorg/klojang/util/ArrayType;" line="243"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toClass" desc="(Ljava/lang/Class;I)Ljava/lang/Class;" line="257"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="baseType" desc="()Ljava/lang/Class;" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dimensions" desc="()I" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$create$0" desc="(Ljava/lang/Class;Lorg/klojang/util/Tuple2;)Lorg/klojang/util/Tuple2;" line="244"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="292"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="64"/><counter type="COMPLEXITY" missed="1" covered="25"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/util/ObjectMethods" sourcefilename="ObjectMethods.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hardCast" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="(Ljava/lang/CharSequence;)Z" line="69"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="([Ljava/lang/Object;)Z" line="79"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="(Ljava/util/Collection;)Z" line="89"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="(Ljava/util/Map;)Z" line="99"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="(Ljava/util/Optional;)Z" line="112"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="(Lorg/klojang/check/aux/Emptyable;)Z" line="123"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="(Ljava/lang/Object;)Z" line="149"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="0" covered="28"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDeepNotEmpty" desc="(Ljava/lang/Object;)Z" line="184"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="2" covered="28"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dne" desc="(Ljava/util/Collection;)Z" line="195"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dne" desc="(Ljava/util/Map;)Z" line="202"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entryDeepNotEmpty" desc="(Ljava/lang/Object;)Z" line="209"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dne" desc="([Ljava/lang/Object;)Z" line="214"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dne" desc="(Ljava/util/Optional;)Z" line="221"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDeepNotNull" desc="(Ljava/lang/Object;)Z" line="234"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="e2nEquals" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="279"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="e2nDeepEquals" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="295"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="e2nHashCode" desc="(Ljava/lang/Object;)I" line="312"><counter type="INSTRUCTION" missed="0" covered="113"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="e2nTypedHashCode" desc="(Ljava/lang/Object;)I" line="367"><counter type="INSTRUCTION" missed="0" covered="220"/><counter type="BRANCH" missed="0" covered="38"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="1"/></method><method name="e2nHash" desc="([Ljava/lang/Object;)I" line="426"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifNull" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="444"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifNull" desc="(Ljava/lang/Object;Lorg/klojang/check/fallible/FallibleSupplier;)Ljava/lang/Object;" line="460"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifEmpty" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="474"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifEmpty" desc="(Ljava/lang/Object;Lorg/klojang/check/fallible/FallibleSupplier;)Ljava/lang/Object;" line="490"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullUnless" desc="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" line="504"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullIf" desc="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" line="519"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifNotNull" desc="(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;" line="539"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifNotNull" desc="(Ljava/lang/Object;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;" line="559"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifNotEmpty" desc="(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;" line="574"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifNotEmpty" desc="(Ljava/lang/Object;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;" line="590"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceIf" desc="(Ljava/lang/Object;Ljava/util/function/Predicate;Ljava/lang/Object;)Ljava/lang/Object;" line="607"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clamp" desc="(Ljava/lang/Object;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Ljava/lang/Object;" line="631"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceIf" desc="(Ljava/lang/Object;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="659"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceIf" desc="(ILjava/util/function/IntPredicate;I)I" line="673"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clamp" desc="(ILorg/klojang/check/relation/IntRelation;I)I" line="696"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceIf" desc="(ILorg/klojang/check/relation/IntRelation;II)I" line="716"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="e2n" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="728"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="n2e" desc="(Ljava/lang/String;)Ljava/lang/String;" line="739"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="n2e" desc="(Ljava/util/List;)Ljava/util/List;" line="750"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="n2e" desc="(Ljava/util/Set;)Ljava/util/Set;" line="761"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="n2e" desc="(Ljava/util/Map;)Ljava/util/Map;" line="772"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="n2e" desc="(Ljava/lang/Integer;)Ljava/lang/Integer;" line="782"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="n2e" desc="(Ljava/lang/Double;)Ljava/lang/Double;" line="792"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="n2e" desc="(Ljava/lang/Long;)Ljava/lang/Long;" line="802"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="n2e" desc="(Ljava/lang/Float;)Ljava/lang/Float;" line="812"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="n2e" desc="(Ljava/lang/Short;)Ljava/lang/Short;" line="822"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="n2e" desc="(Ljava/lang/Byte;)Ljava/lang/Byte;" line="832"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="n2e" desc="(Ljava/lang/Character;)Ljava/lang/Character;" line="842"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="n2e" desc="(Ljava/lang/Boolean;)Ljava/lang/Boolean;" line="853"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eq" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="857"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="arraysEqual" desc="([Ljava/lang/Object;[Ljava/lang/Object;)Z" line="870"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listsEqual" desc="(Ljava/util/List;Ljava/util/List;)Z" line="882"><counter type="INSTRUCTION" missed="4" covered="25"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setsEqual" desc="(Ljava/util/Set;Ljava/util/Set;)Z" line="896"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapsEqual" desc="(Ljava/util/Map;Ljava/util/Map;)Z" line="920"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$isDeepNotNull$0" desc="(Ljava/util/Map$Entry;)Z" line="245"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="67" covered="1072"/><counter type="BRANCH" missed="24" covered="248"/><counter type="LINE" missed="17" covered="187"/><counter type="COMPLEXITY" missed="20" covered="172"/><counter type="METHOD" missed="3" covered="53"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/util/InvokeMethods" sourcefilename="InvokeMethods.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newInstance" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="34"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newInstance" desc="(Ljava/lang/Class;I)Ljava/lang/Object;" line="56"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newArray" desc="(Ljava/lang/Class;I)Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="4" covered="7"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArrayLength" desc="(Ljava/lang/Object;)I" line="88"><counter type="INSTRUCTION" missed="4" covered="6"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArrayElement" desc="(Ljava/lang/Object;I)Ljava/lang/Object;" line="105"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setArrayElement" desc="(Ljava/lang/Object;ILjava/lang/Object;)V" line="120"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNoArgConstructor" desc="(Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;" line="128"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIntArgConstructor" desc="(Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;" line="138"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="83" covered="46"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="25" covered="13"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/util/StringMethods" sourcefilename="StringMethods.java"><method name="append" desc="(Ljava/lang/StringBuilder;Ljava/lang/Object;)Ljava/lang/StringBuilder;" line="46"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/StringBuilder;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/StringBuilder;" line="59"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/StringBuilder;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/StringBuilder;" line="76"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/StringBuilder;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/StringBuilder;" line="92"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/StringBuilder;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/StringBuilder;" line="120"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/StringBuilder;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/StringBuilder;" line="151"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/StringBuilder;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/StringBuilder;" line="185"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/StringBuilder;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/StringBuilder;" line="222"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/StringBuilder;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/StringBuilder;" line="262"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/StringBuilder;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/StringBuilder;" line="307"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="concat" desc="([Ljava/lang/Object;)Ljava/lang/String;" line="330"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="count" desc="(Ljava/lang/Object;Ljava/lang/String;)I" line="346"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="count" desc="(Ljava/lang/Object;Ljava/lang/String;Z)I" line="360"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="count" desc="(Ljava/lang/Object;Ljava/lang/String;ZI)I" line="380"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countDiscrete" desc="(Ljava/lang/Object;Ljava/lang/String;)I" line="412"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countDiscrete" desc="(Ljava/lang/Object;Ljava/lang/String;Z)I" line="430"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countDiscrete" desc="(Ljava/lang/Object;Ljava/lang/String;ZI)I" line="449"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="count" desc="(Ljava/lang/String;CZI)I" line="474"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ellipsis" desc="(Ljava/lang/Object;I)Ljava/lang/String;" line="515"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toShortString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="529"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toShortString" desc="(Ljava/lang/Object;I)Ljava/lang/String;" line="542"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toShortString" desc="(Ljava/lang/Object;III)Ljava/lang/String;" line="594"><counter type="INSTRUCTION" missed="60" covered="156"/><counter type="BRANCH" missed="13" covered="25"/><counter type="LINE" missed="8" covered="22"/><counter type="COMPLEXITY" missed="11" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ellipsis0" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="649"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startsWith" desc="(Ljava/lang/Object;ZLjava/util/Collection;)Ljava/util/Optional;" line="672"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startsWith" desc="(Ljava/lang/Object;Z[Ljava/lang/String;)Ljava/util/Optional;" line="692"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startsWith0" desc="(Ljava/lang/String;Z[Ljava/lang/String;)Ljava/lang/String;" line="702"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endsWith" desc="(Ljava/lang/Object;ZLjava/util/Collection;)Ljava/util/Optional;" line="728"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endsWith" desc="(Ljava/lang/Object;Z[Ljava/lang/String;)Ljava/util/Optional;" line="748"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endsWith0" desc="(Ljava/lang/String;Z[Ljava/lang/String;)Ljava/lang/String;" line="758"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensurePrefix" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="779"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureSuffix" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="796"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBlank" desc="(Ljava/lang/Object;)Z" line="811"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifBlank" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="823"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lchop" desc="(Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/String;" line="834"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lchop" desc="(Ljava/lang/Object;Z[Ljava/lang/String;)Ljava/lang/String;" line="848"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rchop" desc="(Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/String;" line="876"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rchop" desc="(Ljava/lang/Object;Z[Ljava/lang/String;)Ljava/lang/String;" line="891"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="firstToUpper" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="921"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="firstToLower" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="940"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lpad" desc="(Ljava/lang/Object;I)Ljava/lang/String;" line="959"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lpad" desc="(Ljava/lang/Object;IC)Ljava/lang/String;" line="974"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lpad" desc="(Ljava/lang/Object;ICLjava/lang/String;)Ljava/lang/String;" line="995"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pad" desc="(Ljava/lang/Object;I)Ljava/lang/String;" line="1019"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pad" desc="(Ljava/lang/Object;IC)Ljava/lang/String;" line="1034"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pad" desc="(Ljava/lang/Object;ICLjava/lang/String;)Ljava/lang/String;" line="1054"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rpad" desc="(Ljava/lang/Object;I)Ljava/lang/String;" line="1080"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rpad" desc="(Ljava/lang/Object;IC)Ljava/lang/String;" line="1095"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rpad" desc="(Ljava/lang/Object;ICLjava/lang/String;)Ljava/lang/String;" line="1111"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ltrim" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="1133"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rtrim" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="1163"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trim" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="1191"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substr" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="1204"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substr" desc="(Ljava/lang/String;II)Ljava/lang/String;" line="1229"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(Ljava/lang/Object;Ljava/lang/String;I)I" line="1267"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="charPosIndexOf" desc="(Ljava/lang/String;CI)I" line="1284"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="charNegIndexOf" desc="(Ljava/lang/String;CI)I" line="1293"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="strPosIndexOf" desc="(Ljava/lang/String;Ljava/lang/String;I)I" line="1302"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="strNegIndexOf" desc="(Ljava/lang/String;Ljava/lang/String;I)I" line="1311"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substringBefore" desc="(Ljava/lang/Object;Ljava/lang/String;I)Ljava/lang/String;" line="1336"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substringOnTo" desc="(Ljava/lang/Object;Ljava/lang/String;I)Ljava/lang/String;" line="1359"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substrFrom" desc="(Ljava/lang/Object;Ljava/lang/String;I)Ljava/lang/String;" line="1388"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substrAfter" desc="(Ljava/lang/Object;Ljava/lang/String;I)Ljava/lang/String;" line="1415"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLineAndColumn" desc="(Ljava/lang/String;I)[I" line="1432"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLineAndColumn" desc="(Ljava/lang/String;ILjava/lang/String;)[I" line="1446"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$endsWith$4" desc="(I)[Ljava/lang/String;" line="729"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$startsWith$3" desc="(I)[Ljava/lang/String;" line="673"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toShortString$2" desc="(IIILjava/lang/Object;)Ljava/lang/String;" line="630"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toShortString$1" desc="(IIILjava/util/Map$Entry;)Ljava/lang/String;" line="616"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toShortString$0" desc="(IIILjava/lang/Object;)Ljava/lang/String;" line="611"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="71" covered="1765"/><counter type="BRANCH" missed="14" covered="230"/><counter type="LINE" missed="9" covered="360"/><counter type="COMPLEXITY" missed="14" covered="177"/><counter type="METHOD" missed="2" covered="67"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/util/ExceptionMethods" sourcefilename="ExceptionMethods.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRootCause" desc="(Ljava/lang/Throwable;)Ljava/lang/Throwable;" line="38"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRootStackTraceAsString" desc="(Ljava/lang/Throwable;)Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRootStackTraceAsString" desc="(Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="6" covered="67"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRootStackTrace" desc="(Ljava/lang/Throwable;[Ljava/lang/String;)[Ljava/lang/StackTraceElement;" line="102"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDetailedMessage" desc="(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/String;" line="146"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrap" desc="(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;" line="158"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrap" desc="(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;" line="178"><counter type="INSTRUCTION" missed="5" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrap" desc="(Ljava/lang/Throwable;Ljava/util/function/Function;)Ljava/lang/RuntimeException;" line="204"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrap" desc="(Ljava/lang/Throwable;Ljava/util/function/BiFunction;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;" line="242"><counter type="INSTRUCTION" missed="5" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="uncheck" desc="(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;" line="268"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="uncheck" desc="(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/RuntimeException;" line="287"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rootCause" desc="(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;" line="301"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rootCause" desc="(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/RuntimeException;" line="317"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getRootStackTrace$0" desc="(I)[Ljava/lang/StackTraceElement;" line="116"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="308"/><counter type="BRANCH" missed="3" covered="25"/><counter type="LINE" missed="6" covered="57"/><counter type="COMPLEXITY" missed="4" covered="25"/><counter type="METHOD" missed="1" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/util/CollectionMethods" sourcefilename="CollectionMethods.java"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listify" desc="(Ljava/lang/Object;)Ljava/util/List;" line="72"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeList" desc="(ILjava/lang/Object;)Ljava/util/List;" line="100"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeList" desc="(ILjava/util/function/Supplier;)Ljava/util/List;" line="120"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newArrayList" desc="(I[Ljava/lang/Object;)Ljava/util/List;" line="142"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newHashMap" desc="(ILjava/lang/Class;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/util/Map;" line="172"><counter type="INSTRUCTION" missed="7" covered="106"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="saturatedEnumMap" desc="(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/util/EnumMap;" line="221"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sublist" desc="(Ljava/util/List;II)Ljava/util/List;" line="249"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(Ljava/util/Map;)Ljava/util/Map;" line="285"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(Ljava/util/Map;Ljava/util/function/Supplier;)Ljava/util/Map;" line="305"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swapAndFreeze" desc="(Ljava/util/Map;)Ljava/util/Map;" line="326"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="freeze" desc="(Ljava/util/Map;Ljava/util/function/Function;)Ljava/util/Map;" line="347"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="freeze" desc="(Ljava/util/Map;Ljava/util/function/BiFunction;)Ljava/util/Map;" line="374"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deepFreeze" desc="(Ljava/util/Map;Ljava/util/function/Function;)Ljava/util/Map;" line="400"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toEntryConverter" desc="(Ljava/util/function/BiFunction;)Ljava/util/function/Function;" line="412"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toEntryConverter" desc="(Ljava/util/function/Function;)Ljava/util/function/Function;" line="417"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkEntry" desc="()Ljava/util/function/Consumer;" line="421"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="freeze" desc="(Ljava/util/List;Lorg/klojang/check/fallible/FallibleFunction;)Ljava/util/List;" line="446"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="freeze" desc="(Ljava/util/Set;Lorg/klojang/check/fallible/FallibleFunction;)Ljava/util/Set;" line="474"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectionToList" desc="(Ljava/util/Collection;Ljava/util/function/Function;)Ljava/util/List;" line="504"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectionToSet" desc="(Ljava/util/Collection;Ljava/util/function/Function;)Ljava/util/Set;" line="529"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectionToMap" desc="(Ljava/util/Collection;Ljava/util/function/Function;)Ljava/util/Map;" line="550"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findFirst" desc="(Ljava/util/Collection;Ljava/util/function/Predicate;)Ljava/lang/Object;" line="568"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implode" desc="(Ljava/util/Collection;)Ljava/lang/String;" line="581"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implode" desc="(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;" line="596"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implode" desc="(Ljava/util/Collection;I)Ljava/lang/String;" line="614"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implode" desc="(Ljava/util/Collection;Ljava/util/function/Function;)Ljava/lang/String;" line="631"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implode" desc="(Ljava/util/Collection;Ljava/lang/String;I)Ljava/lang/String;" line="651"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implode" desc="(Ljava/util/Collection;Ljava/util/function/Function;Ljava/lang/String;II)Ljava/lang/String;" line="680"><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNullRepellent" desc="(Ljava/util/Collection;)Z" line="727"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$checkEntry$14" desc="(Ljava/util/Map$Entry;)V" line="422"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toEntryConverter$13" desc="(Ljava/util/function/Function;Ljava/util/Map$Entry;)Ljava/util/Map$Entry;" line="417"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toEntryConverter$12" desc="(Ljava/util/function/BiFunction;Ljava/util/Map$Entry;)Ljava/util/Map$Entry;" line="412"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deepFreeze$11" desc="(Ljava/util/Map;Ljava/util/Map$Entry;)V" line="406"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$swapAndFreeze$10" desc="(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;" line="326"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$swap$9" desc="(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V" line="308"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$swap$8" desc="(Ljava/util/Map;)Ljava/util/Map;" line="285"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$7" desc="(Ljava/lang/Object;)Ljava/util/List;" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$6" desc="(Ljava/lang/Object;)Ljava/util/List;" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$5" desc="(Ljava/lang/Object;)Ljava/util/List;" line="39"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$4" desc="(Ljava/lang/Object;)Ljava/util/List;" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$3" desc="(Ljava/lang/Object;)Ljava/util/List;" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$2" desc="(Ljava/lang/Object;)Ljava/util/List;" line="36"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$1" desc="(Ljava/lang/Object;)Ljava/util/List;" line="35"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Ljava/lang/Object;)Ljava/util/List;" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="101"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="49" covered="925"/><counter type="BRANCH" missed="4" covered="40"/><counter type="LINE" missed="10" covered="165"/><counter type="COMPLEXITY" missed="5" covered="63"/><counter type="METHOD" missed="2" covered="44"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/util/Tuple2" sourcefilename="Tuple2.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/klojang/util/Tuple2;" line="29"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toEntry" desc="()Ljava/util/Map$Entry;" line="49"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="first" desc="()Ljava/lang/Object;" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="second" desc="()Ljava/lang/Object;" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/util/InvokeException" sourcefilename="InvokeException.java"><method name="missingNoArgConstructor" desc="(Ljava/lang/Class;)Lorg/klojang/util/InvokeException;" line="21"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="noSuchConstructor" desc="(Ljava/lang/Class;[Ljava/lang/Class;)Lorg/klojang/util/InvokeException;" line="34"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/util/ArrayMethods" sourcefilename="ArrayMethods.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;" line="62"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;" line="81"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="concat" desc="([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;" line="102"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="concat" desc="([Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Object;[[Ljava/lang/Object;)[Ljava/lang/Object;" line="117"><counter type="INSTRUCTION" missed="0" covered="131"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isElementOf" desc="(I[I)Z" line="152"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isElementOf" desc="(Ljava/lang/Object;[Ljava/lang/Object;)Z" line="165"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOneOf" desc="(Ljava/lang/Object;[Ljava/lang/Object;)Z" line="177"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexOf" desc="([II)Ljava/util/OptionalInt;" line="190"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastIndexOf" desc="([II)Ljava/util/OptionalInt;" line="209"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="([Ljava/lang/Object;Ljava/lang/Object;)I" line="229"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastIndexOf" desc="([Ljava/lang/Object;Ljava/lang/Object;)I" line="257"><counter type="INSTRUCTION" missed="1" covered="40"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="refIndexOf" desc="([Ljava/lang/Object;Ljava/lang/Object;)I" line="285"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="refLastIndexOf" desc="([Ljava/lang/Object;Ljava/lang/Object;)I" line="305"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="find" desc="([Ljava/lang/Object;Ljava/util/function/Predicate;)Lorg/klojang/check/aux/Result;" line="326"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="find" desc="([Ljava/lang/Object;Ljava/util/function/Predicate;Ljava/util/function/Function;)Lorg/klojang/check/aux/Result;" line="353"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="find" desc="([ILjava/util/function/IntPredicate;)Ljava/util/OptionalInt;" line="374"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" line="391"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="([Ljava/lang/Object;II)[Ljava/lang/Object;" line="404"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doReverse" desc="([Ljava/lang/Object;II)[Ljava/lang/Object;" line="409"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="([I)[I" line="424"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="([III)[I" line="436"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doReverse" desc="([III)[I" line="442"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="(Ljava/lang/Object;)I" line="469"><counter type="INSTRUCTION" missed="6" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deepHashCode" desc="(Ljava/lang/Object;)I" line="485"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implodeInts" desc="([I)Ljava/lang/String;" line="500"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implodeInts" desc="([ILjava/lang/String;)Ljava/lang/String;" line="512"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implodeInts" desc="([II)Ljava/lang/String;" line="527"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implodeInts" desc="([ILjava/util/function/IntFunction;)Ljava/lang/String;" line="540"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implodeInts" desc="([ILjava/lang/String;I)Ljava/lang/String;" line="556"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implodeInts" desc="([ILjava/util/function/IntFunction;Ljava/lang/String;II)Ljava/lang/String;" line="580"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implodeAny" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="601"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implodeAny" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="616"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implodeAny" desc="(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/String;" line="633"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implodeAny" desc="(Ljava/lang/Object;I)Ljava/lang/String;" line="650"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implodeAny" desc="(Ljava/lang/Object;Ljava/lang/String;I)Ljava/lang/String;" line="668"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implodeAny" desc="(Ljava/lang/Object;Ljava/util/function/Function;Ljava/lang/String;II)Ljava/lang/String;" line="694"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implode" desc="([Ljava/lang/Object;)Ljava/lang/String;" line="718"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implode" desc="([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="732"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implode" desc="([Ljava/lang/Object;I)Ljava/lang/String;" line="750"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implode" desc="([Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/String;" line="765"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implode" desc="([Ljava/lang/Object;Ljava/lang/String;I)Ljava/lang/String;" line="783"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implode" desc="([Ljava/lang/Object;Ljava/util/function/Function;Ljava/lang/String;II)Ljava/lang/String;" line="808"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pack" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" line="829"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ints" desc="([I)[I" line="840"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="chars" desc="([C)[C" line="851"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doubles" desc="([D)[D" line="862"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="longs" desc="([J)[J" line="873"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="floats" desc="([F)[F" line="884"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prefix" desc="([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;" line="897"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prefix" desc="([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;" line="917"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asList" desc="([I)Ljava/util/List;" line="935"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asList" desc="([F)Ljava/util/List;" line="945"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asList" desc="([D)Ljava/util/List;" line="955"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asList" desc="([J)Ljava/util/List;" line="965"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asList" desc="([S)Ljava/util/List;" line="975"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asList" desc="([B)Ljava/util/List;" line="985"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asList" desc="([C)Ljava/util/List;" line="995"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asList" desc="([Z)Ljava/util/List;" line="1005"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unbox" desc="([Ljava/lang/Integer;I)[I" line="1017"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unbox" desc="([Ljava/lang/Integer;)[I" line="1029"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="box" desc="([I)[Ljava/lang/Integer;" line="1039"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="box" desc="([D)[Ljava/lang/Double;" line="1049"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="box" desc="([J)[Ljava/lang/Long;" line="1059"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="box" desc="([F)[Ljava/lang/Float;" line="1069"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="box" desc="([S)[Ljava/lang/Short;" line="1083"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="box" desc="([B)[Ljava/lang/Byte;" line="1097"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="box" desc="([C)[Ljava/lang/Character;" line="1111"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="box" desc="([Z)[Ljava/lang/Boolean;" line="1125"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromTemplate" desc="([Ljava/lang/Object;I)[Ljava/lang/Object;" line="1134"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$box$11" desc="(I)[Ljava/lang/Long;" line="1059"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$box$10" desc="(I)[Ljava/lang/Double;" line="1049"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$box$9" desc="(I)[Ljava/lang/Integer;" line="1039"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$unbox$8" desc="(ILjava/lang/Integer;)I" line="1018"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$implodeAny$7" desc="(Ljava/lang/Object;I)Ljava/lang/Object;" line="703"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$6" desc="(Ljava/lang/Object;)I" line="458"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$5" desc="(Ljava/lang/Object;)I" line="457"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$4" desc="(Ljava/lang/Object;)I" line="456"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$3" desc="(Ljava/lang/Object;)I" line="455"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$2" desc="(Ljava/lang/Object;)I" line="454"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$1" desc="(Ljava/lang/Object;)I" line="453"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$0" desc="(Ljava/lang/Object;)I" line="452"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="79" covered="1173"/><counter type="BRANCH" missed="8" covered="60"/><counter type="LINE" missed="16" covered="221"/><counter type="COMPLEXITY" missed="16" covered="101"/><counter type="METHOD" missed="10" covered="73"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/util/AnyTuple2" sourcefilename="AnyTuple2.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/klojang/util/AnyTuple2;" line="29"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toEntry" desc="()Ljava/util/Map$Entry;" line="38"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="49"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDeepNotEmpty" desc="()Z" line="60"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="first" desc="()Ljava/lang/Object;" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="second" desc="()Ljava/lang/Object;" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="43"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CollectionMethods.java"><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="18" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="2"/><line nr="73" mi="0" ci="6" mb="0" cb="2"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="2"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="2"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="2"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="7" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="7" mb="0" cb="2"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="7" mb="0" cb="2"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="7" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="2" cb="0"/><line nr="145" mi="7" ci="0" mb="0" cb="0"/><line nr="147" mi="8" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="7" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="1" cb="1"/><line nr="175" mi="7" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="6" mb="0" cb="2"/><line nr="179" mi="0" ci="8" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="11" mb="0" cb="0"/><line nr="184" mi="0" ci="10" mb="0" cb="2"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="12" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="1" cb="1"/><line nr="192" mi="0" ci="8" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="2"/><line nr="195" mi="0" ci="10" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="8" mb="0" cb="0"/><line nr="222" mi="0" ci="9" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="0" ci="8" mb="0" cb="2"/><line nr="225" mi="0" ci="16" mb="0" cb="0"/><line nr="228" mi="0" ci="9" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="4" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="2"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="254" mi="0" ci="8" mb="0" cb="0"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="7" mb="0" cb="0"/><line nr="260" mi="0" ci="2" mb="0" cb="2"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="7" mb="0" cb="0"/><line nr="267" mi="0" ci="7" mb="0" cb="0"/><line nr="268" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="17" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="0" ci="4" mb="0" cb="0"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="308" mi="0" ci="10" mb="0" cb="0"/><line nr="309" mi="0" ci="11" mb="0" cb="0"/><line nr="326" mi="0" ci="10" mb="0" cb="0"/><line nr="327" mi="0" ci="11" mb="0" cb="0"/><line nr="347" mi="0" ci="4" mb="0" cb="0"/><line nr="348" mi="0" ci="4" mb="0" cb="0"/><line nr="349" mi="0" ci="4" mb="0" cb="0"/><line nr="350" mi="0" ci="3" mb="0" cb="0"/><line nr="351" mi="0" ci="2" mb="0" cb="0"/><line nr="352" mi="0" ci="5" mb="0" cb="0"/><line nr="374" mi="0" ci="4" mb="0" cb="0"/><line nr="375" mi="0" ci="4" mb="0" cb="0"/><line nr="376" mi="0" ci="4" mb="0" cb="0"/><line nr="377" mi="0" ci="3" mb="0" cb="0"/><line nr="378" mi="0" ci="2" mb="0" cb="0"/><line nr="379" mi="0" ci="5" mb="0" cb="0"/><line nr="400" mi="0" ci="4" mb="0" cb="0"/><line nr="401" mi="0" ci="4" mb="0" cb="0"/><line nr="402" mi="0" ci="12" mb="0" cb="0"/><line nr="403" mi="0" ci="3" mb="0" cb="0"/><line nr="404" mi="0" ci="3" mb="0" cb="0"/><line nr="405" mi="0" ci="3" mb="0" cb="0"/><line nr="406" mi="0" ci="9" mb="0" cb="0"/><line nr="407" mi="0" ci="3" mb="0" cb="0"/><line nr="412" mi="0" ci="13" mb="0" cb="0"/><line nr="417" mi="0" ci="11" mb="0" cb="0"/><line nr="421" mi="0" ci="2" mb="0" cb="0"/><line nr="422" mi="0" ci="3" mb="0" cb="0"/><line nr="423" mi="0" ci="11" mb="0" cb="0"/><line nr="424" mi="0" ci="12" mb="0" cb="0"/><line nr="446" mi="0" ci="4" mb="0" cb="0"/><line nr="447" mi="0" ci="4" mb="0" cb="0"/><line nr="448" mi="0" ci="4" mb="0" cb="0"/><line nr="449" mi="0" ci="8" mb="0" cb="2"/><line nr="450" mi="0" ci="8" mb="0" cb="0"/><line nr="452" mi="0" ci="3" mb="0" cb="0"/><line nr="474" mi="0" ci="4" mb="0" cb="0"/><line nr="475" mi="0" ci="4" mb="0" cb="0"/><line nr="476" mi="0" ci="4" mb="0" cb="0"/><line nr="477" mi="0" ci="3" mb="0" cb="0"/><line nr="478" mi="0" ci="8" mb="0" cb="2"/><line nr="479" mi="0" ci="7" mb="0" cb="0"/><line nr="481" mi="0" ci="3" mb="0" cb="0"/><line nr="504" mi="0" ci="4" mb="0" cb="0"/><line nr="505" mi="0" ci="4" mb="0" cb="0"/><line nr="506" mi="0" ci="8" mb="0" cb="0"/><line nr="529" mi="0" ci="4" mb="0" cb="0"/><line nr="530" mi="0" ci="4" mb="0" cb="0"/><line nr="531" mi="0" ci="8" mb="0" cb="0"/><line nr="550" mi="0" ci="4" mb="0" cb="0"/><line nr="551" mi="0" ci="4" mb="0" cb="0"/><line nr="552" mi="0" ci="7" mb="0" cb="0"/><line nr="553" mi="0" ci="1" mb="0" cb="0"/><line nr="568" mi="0" ci="8" mb="0" cb="0"/><line nr="581" mi="0" ci="4" mb="0" cb="0"/><line nr="596" mi="0" ci="3" mb="0" cb="0"/><line nr="597" mi="0" ci="7" mb="0" cb="0"/><line nr="614" mi="0" ci="5" mb="0" cb="0"/><line nr="631" mi="0" ci="7" mb="0" cb="0"/><line nr="651" mi="0" ci="7" mb="0" cb="0"/><line nr="680" mi="0" ci="8" mb="0" cb="0"/><line nr="681" mi="0" ci="4" mb="0" cb="0"/><line nr="682" mi="0" ci="4" mb="0" cb="0"/><line nr="683" mi="0" ci="10" mb="0" cb="0"/><line nr="684" mi="0" ci="9" mb="0" cb="2"/><line nr="685" mi="0" ci="7" mb="0" cb="0"/><line nr="686" mi="0" ci="2" mb="0" cb="2"/><line nr="687" mi="0" ci="3" mb="0" cb="2"/><line nr="688" mi="0" ci="3" mb="0" cb="0"/><line nr="689" mi="0" ci="6" mb="0" cb="0"/><line nr="690" mi="0" ci="8" mb="0" cb="0"/><line nr="691" mi="0" ci="3" mb="0" cb="2"/><line nr="692" mi="0" ci="6" mb="0" cb="0"/><line nr="693" mi="0" ci="9" mb="0" cb="0"/><line nr="695" mi="0" ci="6" mb="0" cb="0"/><line nr="696" mi="0" ci="8" mb="0" cb="0"/><line nr="699" mi="0" ci="7" mb="0" cb="0"/><line nr="703" mi="0" ci="2" mb="0" cb="0"/><line nr="704" mi="0" ci="2" mb="0" cb="0"/><line nr="705" mi="0" ci="5" mb="0" cb="0"/><line nr="706" mi="0" ci="5" mb="0" cb="0"/><line nr="707" mi="0" ci="6" mb="0" cb="0"/><line nr="708" mi="0" ci="7" mb="0" cb="0"/><line nr="709" mi="0" ci="9" mb="0" cb="0"/><line nr="710" mi="0" ci="10" mb="0" cb="0"/><line nr="711" mi="0" ci="6" mb="0" cb="0"/><line nr="712" mi="0" ci="7" mb="0" cb="0"/><line nr="713" mi="0" ci="9" mb="0" cb="0"/><line nr="714" mi="0" ci="8" mb="0" cb="0"/><line nr="727" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="49" covered="925"/><counter type="BRANCH" missed="4" covered="40"/><counter type="LINE" missed="10" covered="165"/><counter type="COMPLEXITY" missed="5" covered="63"/><counter type="METHOD" missed="2" covered="44"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringMethods.java"><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="10" mb="0" cb="0"/><line nr="76" mi="0" ci="12" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="1" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="267" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="0" ci="2" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="307" mi="0" ci="3" mb="0" cb="0"/><line nr="308" mi="0" ci="3" mb="0" cb="0"/><line nr="309" mi="0" ci="2" mb="0" cb="0"/><line nr="310" mi="0" ci="2" mb="0" cb="0"/><line nr="311" mi="0" ci="2" mb="0" cb="0"/><line nr="312" mi="0" ci="2" mb="0" cb="0"/><line nr="313" mi="0" ci="2" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="315" mi="0" ci="2" mb="0" cb="0"/><line nr="316" mi="0" ci="2" mb="0" cb="0"/><line nr="317" mi="0" ci="2" mb="0" cb="0"/><line nr="318" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="0" ci="12" mb="0" cb="0"/><line nr="320" mi="0" ci="2" mb="0" cb="0"/><line nr="330" mi="0" ci="3" mb="0" cb="0"/><line nr="331" mi="0" ci="8" mb="0" cb="0"/><line nr="332" mi="0" ci="8" mb="0" cb="0"/><line nr="333" mi="0" ci="3" mb="0" cb="0"/><line nr="346" mi="0" ci="5" mb="0" cb="0"/><line nr="360" mi="0" ci="6" mb="0" cb="0"/><line nr="380" mi="0" ci="6" mb="0" cb="0"/><line nr="381" mi="0" ci="7" mb="0" cb="0"/><line nr="383" mi="0" ci="10" mb="0" cb="4"/><line nr="384" mi="0" ci="2" mb="0" cb="0"/><line nr="386" mi="0" ci="4" mb="0" cb="2"/><line nr="387" mi="0" ci="8" mb="0" cb="0"/><line nr="389" mi="0" ci="2" mb="0" cb="0"/><line nr="390" mi="0" ci="11" mb="0" cb="2"/><line nr="391" mi="0" ci="9" mb="0" cb="2"/><line nr="392" mi="0" ci="4" mb="0" cb="2"/><line nr="393" mi="0" ci="1" mb="0" cb="0"/><line nr="397" mi="0" ci="2" mb="0" cb="0"/><line nr="412" mi="0" ci="6" mb="0" cb="0"/><line nr="430" mi="0" ci="6" mb="0" cb="0"/><line nr="449" mi="0" ci="6" mb="0" cb="0"/><line nr="450" mi="0" ci="7" mb="0" cb="0"/><line nr="452" mi="0" ci="10" mb="0" cb="4"/><line nr="453" mi="0" ci="2" mb="0" cb="0"/><line nr="455" mi="0" ci="4" mb="0" cb="2"/><line nr="456" mi="0" ci="8" mb="0" cb="0"/><line nr="458" mi="0" ci="2" mb="0" cb="0"/><line nr="459" mi="0" ci="2" mb="0" cb="0"/><line nr="461" mi="0" ci="9" mb="0" cb="2"/><line nr="462" mi="0" ci="4" mb="0" cb="2"/><line nr="463" mi="0" ci="1" mb="0" cb="0"/><line nr="465" mi="0" ci="6" mb="0" cb="0"/><line nr="467" mi="0" ci="1" mb="0" cb="0"/><line nr="469" mi="0" ci="7" mb="0" cb="2"/><line nr="470" mi="0" ci="2" mb="0" cb="0"/><line nr="474" mi="0" ci="2" mb="0" cb="0"/><line nr="475" mi="0" ci="2" mb="0" cb="2"/><line nr="476" mi="0" ci="3" mb="0" cb="0"/><line nr="477" mi="0" ci="8" mb="0" cb="2"/><line nr="478" mi="0" ci="10" mb="1" cb="3"/><line nr="479" mi="0" ci="1" mb="0" cb="0"/><line nr="482" mi="0" ci="1" mb="0" cb="0"/><line nr="483" mi="0" ci="8" mb="0" cb="2"/><line nr="484" mi="0" ci="9" mb="0" cb="4"/><line nr="485" mi="0" ci="1" mb="0" cb="0"/><line nr="489" mi="0" ci="2" mb="0" cb="0"/><line nr="515" mi="0" ci="2" mb="0" cb="2"/><line nr="516" mi="0" ci="5" mb="0" cb="0"/><line nr="518" mi="0" ci="2" mb="0" cb="0"/><line nr="529" mi="0" ci="4" mb="0" cb="0"/><line nr="542" mi="0" ci="4" mb="0" cb="0"/><line nr="543" mi="0" ci="4" mb="0" cb="0"/><line nr="544" mi="0" ci="6" mb="0" cb="0"/><line nr="594" mi="0" ci="6" mb="3" cb="3"/><line nr="595" mi="5" ci="0" mb="0" cb="0"/><line nr="598" mi="0" ci="2" mb="1" cb="1"/><line nr="599" mi="2" ci="0" mb="0" cb="0"/><line nr="600" mi="0" ci="7" mb="0" cb="4"/><line nr="603" mi="0" ci="5" mb="0" cb="0"/><line nr="606" mi="3" ci="3" mb="1" cb="1"/><line nr="607" mi="4" ci="0" mb="0" cb="0"/><line nr="608" mi="0" ci="6" mb="0" cb="2"/><line nr="609" mi="0" ci="8" mb="0" cb="2"/><line nr="611" mi="0" ci="18" mb="0" cb="0"/><line nr="613" mi="0" ci="7" mb="0" cb="2"/><line nr="614" mi="1" ci="7" mb="1" cb="1"/><line nr="616" mi="0" ci="19" mb="0" cb="0"/><line nr="618" mi="0" ci="7" mb="0" cb="2"/><line nr="620" mi="0" ci="15" mb="0" cb="0"/><line nr="622" mi="0" ci="6" mb="0" cb="2"/><line nr="623" mi="0" ci="8" mb="0" cb="2"/><line nr="625" mi="0" ci="10" mb="0" cb="0"/><line nr="627" mi="3" ci="4" mb="1" cb="1"/><line nr="628" mi="8" ci="0" mb="2" cb="0"/><line nr="630" mi="18" ci="0" mb="0" cb="0"/><line nr="632" mi="1" ci="4" mb="1" cb="1"/><line nr="633" mi="8" ci="0" mb="2" cb="0"/><line nr="635" mi="9" ci="0" mb="0" cb="0"/><line nr="637" mi="1" ci="6" mb="1" cb="1"/><line nr="638" mi="0" ci="7" mb="0" cb="0"/><line nr="640" mi="0" ci="9" mb="0" cb="0"/><line nr="643" mi="3" ci="0" mb="0" cb="0"/><line nr="645" mi="0" ci="4" mb="0" cb="0"/><line nr="649" mi="0" ci="4" mb="0" cb="0"/><line nr="650" mi="0" ci="4" mb="0" cb="2"/><line nr="651" mi="0" ci="8" mb="0" cb="0"/><line nr="653" mi="0" ci="2" mb="0" cb="0"/><line nr="672" mi="0" ci="4" mb="0" cb="0"/><line nr="673" mi="0" ci="11" mb="0" cb="0"/><line nr="692" mi="0" ci="6" mb="0" cb="0"/><line nr="693" mi="0" ci="2" mb="0" cb="2"/><line nr="694" mi="0" ci="2" mb="0" cb="0"/><line nr="696" mi="0" ci="7" mb="0" cb="0"/><line nr="702" mi="0" ci="3" mb="0" cb="2"/><line nr="703" mi="0" ci="16" mb="0" cb="2"/><line nr="704" mi="0" ci="9" mb="0" cb="2"/><line nr="705" mi="0" ci="2" mb="0" cb="0"/><line nr="709" mi="0" ci="2" mb="0" cb="0"/><line nr="728" mi="0" ci="4" mb="0" cb="0"/><line nr="729" mi="0" ci="11" mb="0" cb="0"/><line nr="748" mi="0" ci="6" mb="0" cb="0"/><line nr="749" mi="0" ci="2" mb="0" cb="2"/><line nr="750" mi="0" ci="2" mb="0" cb="0"/><line nr="752" mi="0" ci="7" mb="0" cb="0"/><line nr="758" mi="0" ci="3" mb="0" cb="2"/><line nr="759" mi="0" ci="16" mb="0" cb="2"/><line nr="760" mi="0" ci="3" mb="0" cb="0"/><line nr="761" mi="0" ci="5" mb="0" cb="0"/><line nr="762" mi="0" ci="8" mb="0" cb="2"/><line nr="763" mi="0" ci="2" mb="0" cb="0"/><line nr="767" mi="0" ci="2" mb="0" cb="0"/><line nr="779" mi="0" ci="4" mb="0" cb="0"/><line nr="780" mi="0" ci="2" mb="0" cb="2"/><line nr="781" mi="0" ci="2" mb="0" cb="0"/><line nr="783" mi="0" ci="3" mb="0" cb="0"/><line nr="784" mi="0" ci="10" mb="0" cb="2"/><line nr="796" mi="0" ci="4" mb="0" cb="0"/><line nr="797" mi="0" ci="2" mb="0" cb="2"/><line nr="798" mi="0" ci="2" mb="0" cb="0"/><line nr="800" mi="0" ci="3" mb="0" cb="0"/><line nr="801" mi="0" ci="10" mb="0" cb="2"/><line nr="811" mi="0" ci="10" mb="0" cb="4"/><line nr="823" mi="0" ci="8" mb="0" cb="2"/><line nr="834" mi="0" ci="5" mb="0" cb="0"/><line nr="848" mi="0" ci="6" mb="0" cb="0"/><line nr="850" mi="0" ci="8" mb="0" cb="4"/><line nr="851" mi="0" ci="2" mb="0" cb="0"/><line nr="854" mi="0" ci="2" mb="0" cb="0"/><line nr="856" mi="0" ci="2" mb="0" cb="0"/><line nr="857" mi="0" ci="16" mb="0" cb="2"/><line nr="858" mi="0" ci="9" mb="0" cb="2"/><line nr="859" mi="0" ci="5" mb="0" cb="0"/><line nr="860" mi="0" ci="2" mb="0" cb="0"/><line nr="863" mi="0" ci="2" mb="0" cb="2"/><line nr="864" mi="0" ci="4" mb="0" cb="0"/><line nr="876" mi="0" ci="5" mb="0" cb="0"/><line nr="891" mi="0" ci="6" mb="0" cb="0"/><line nr="893" mi="0" ci="8" mb="0" cb="4"/><line nr="894" mi="0" ci="2" mb="0" cb="0"/><line nr="897" mi="0" ci="3" mb="0" cb="0"/><line nr="899" mi="0" ci="2" mb="0" cb="0"/><line nr="900" mi="0" ci="16" mb="0" cb="2"/><line nr="901" mi="0" ci="3" mb="0" cb="0"/><line nr="902" mi="0" ci="10" mb="0" cb="2"/><line nr="903" mi="0" ci="4" mb="0" cb="0"/><line nr="904" mi="0" ci="2" mb="0" cb="0"/><line nr="907" mi="0" ci="2" mb="0" cb="2"/><line nr="908" mi="0" ci="5" mb="0" cb="0"/><line nr="921" mi="0" ci="8" mb="0" cb="4"/><line nr="922" mi="0" ci="2" mb="0" cb="0"/><line nr="924" mi="0" ci="5" mb="0" cb="2"/><line nr="925" mi="0" ci="9" mb="0" cb="0"/><line nr="927" mi="0" ci="2" mb="0" cb="0"/><line nr="940" mi="0" ci="8" mb="0" cb="4"/><line nr="941" mi="0" ci="2" mb="0" cb="0"/><line nr="943" mi="0" ci="5" mb="0" cb="2"/><line nr="944" mi="0" ci="9" mb="0" cb="0"/><line nr="946" mi="0" ci="2" mb="0" cb="0"/><line nr="959" mi="0" ci="6" mb="0" cb="0"/><line nr="974" mi="0" ci="6" mb="0" cb="0"/><line nr="995" mi="0" ci="7" mb="0" cb="0"/><line nr="996" mi="0" ci="7" mb="0" cb="2"/><line nr="997" mi="0" ci="5" mb="0" cb="0"/><line nr="998" mi="0" ci="4" mb="0" cb="2"/><line nr="999" mi="0" ci="4" mb="0" cb="0"/><line nr="1001" mi="0" ci="9" mb="0" cb="0"/><line nr="1002" mi="0" ci="8" mb="0" cb="0"/><line nr="1003" mi="0" ci="2" mb="0" cb="0"/><line nr="1004" mi="0" ci="1" mb="0" cb="0"/><line nr="1005" mi="0" ci="1" mb="0" cb="0"/><line nr="1019" mi="0" ci="6" mb="0" cb="0"/><line nr="1034" mi="0" ci="6" mb="0" cb="0"/><line nr="1054" mi="0" ci="7" mb="0" cb="0"/><line nr="1055" mi="0" ci="7" mb="0" cb="2"/><line nr="1056" mi="0" ci="5" mb="0" cb="0"/><line nr="1057" mi="0" ci="4" mb="0" cb="2"/><line nr="1058" mi="0" ci="4" mb="0" cb="0"/><line nr="1060" mi="0" ci="8" mb="0" cb="0"/><line nr="1061" mi="0" ci="7" mb="0" cb="0"/><line nr="1062" mi="0" ci="7" mb="0" cb="0"/><line nr="1063" mi="0" ci="7" mb="0" cb="0"/><line nr="1064" mi="0" ci="4" mb="0" cb="0"/><line nr="1065" mi="0" ci="9" mb="0" cb="0"/><line nr="1066" mi="0" ci="4" mb="0" cb="0"/><line nr="1067" mi="0" ci="3" mb="0" cb="0"/><line nr="1080" mi="0" ci="6" mb="0" cb="0"/><line nr="1095" mi="0" ci="6" mb="0" cb="0"/><line nr="1111" mi="0" ci="7" mb="0" cb="0"/><line nr="1112" mi="0" ci="4" mb="0" cb="0"/><line nr="1113" mi="0" ci="7" mb="0" cb="2"/><line nr="1114" mi="0" ci="4" mb="0" cb="2"/><line nr="1115" mi="0" ci="4" mb="0" cb="0"/><line nr="1117" mi="0" ci="8" mb="0" cb="0"/><line nr="1118" mi="0" ci="3" mb="0" cb="0"/><line nr="1119" mi="0" ci="12" mb="0" cb="0"/><line nr="1133" mi="0" ci="6" mb="0" cb="0"/><line nr="1134" mi="0" ci="2" mb="0" cb="2"/><line nr="1135" mi="0" ci="2" mb="0" cb="0"/><line nr="1137" mi="0" ci="3" mb="0" cb="0"/><line nr="1138" mi="0" ci="2" mb="0" cb="0"/><line nr="1140" mi="0" ci="6" mb="0" cb="2"/><line nr="1141" mi="0" ci="8" mb="0" cb="2"/><line nr="1142" mi="0" ci="7" mb="0" cb="2"/><line nr="1143" mi="0" ci="1" mb="0" cb="0"/><line nr="1146" mi="0" ci="1" mb="0" cb="0"/><line nr="1148" mi="0" ci="8" mb="0" cb="2"/><line nr="1163" mi="0" ci="6" mb="0" cb="0"/><line nr="1164" mi="0" ci="2" mb="0" cb="2"/><line nr="1165" mi="0" ci="2" mb="0" cb="0"/><line nr="1167" mi="0" ci="3" mb="0" cb="0"/><line nr="1168" mi="0" ci="5" mb="0" cb="0"/><line nr="1170" mi="0" ci="4" mb="0" cb="2"/><line nr="1171" mi="0" ci="8" mb="0" cb="2"/><line nr="1172" mi="0" ci="7" mb="0" cb="2"/><line nr="1173" mi="0" ci="1" mb="0" cb="0"/><line nr="1176" mi="0" ci="1" mb="0" cb="0"/><line nr="1178" mi="0" ci="15" mb="0" cb="2"/><line nr="1191" mi="0" ci="6" mb="0" cb="0"/><line nr="1204" mi="0" ci="4" mb="0" cb="0"/><line nr="1205" mi="0" ci="3" mb="0" cb="0"/><line nr="1206" mi="0" ci="2" mb="0" cb="2"/><line nr="1207" mi="0" ci="4" mb="0" cb="0"/><line nr="1209" mi="0" ci="10" mb="0" cb="0"/><line nr="1210" mi="0" ci="4" mb="0" cb="0"/><line nr="1229" mi="0" ci="4" mb="0" cb="0"/><line nr="1230" mi="0" ci="3" mb="0" cb="0"/><line nr="1232" mi="0" ci="2" mb="0" cb="2"/><line nr="1233" mi="0" ci="4" mb="0" cb="0"/><line nr="1234" mi="0" ci="8" mb="0" cb="0"/><line nr="1236" mi="0" ci="2" mb="0" cb="0"/><line nr="1237" mi="0" ci="7" mb="0" cb="0"/><line nr="1240" mi="0" ci="2" mb="0" cb="2"/><line nr="1241" mi="0" ci="5" mb="0" cb="0"/><line nr="1243" mi="0" ci="4" mb="0" cb="0"/><line nr="1244" mi="0" ci="4" mb="0" cb="0"/><line nr="1245" mi="0" ci="7" mb="0" cb="0"/><line nr="1247" mi="0" ci="7" mb="0" cb="0"/><line nr="1248" mi="0" ci="5" mb="0" cb="0"/><line nr="1267" mi="0" ci="6" mb="0" cb="0"/><line nr="1268" mi="0" ci="7" mb="0" cb="0"/><line nr="1270" mi="0" ci="10" mb="0" cb="4"/><line nr="1271" mi="0" ci="2" mb="0" cb="0"/><line nr="1273" mi="0" ci="4" mb="0" cb="2"/><line nr="1274" mi="0" ci="3" mb="0" cb="2"/><line nr="1275" mi="0" ci="7" mb="0" cb="0"/><line nr="1276" mi="0" ci="6" mb="0" cb="0"/><line nr="1278" mi="0" ci="3" mb="0" cb="2"/><line nr="1279" mi="0" ci="5" mb="0" cb="0"/><line nr="1280" mi="0" ci="4" mb="0" cb="0"/><line nr="1284" mi="0" ci="8" mb="0" cb="2"/><line nr="1285" mi="0" ci="8" mb="0" cb="4"/><line nr="1286" mi="0" ci="2" mb="0" cb="0"/><line nr="1289" mi="0" ci="2" mb="0" cb="0"/><line nr="1293" mi="0" ci="9" mb="0" cb="2"/><line nr="1294" mi="0" ci="8" mb="0" cb="4"/><line nr="1295" mi="0" ci="2" mb="0" cb="0"/><line nr="1298" mi="0" ci="2" mb="0" cb="0"/><line nr="1302" mi="0" ci="11" mb="0" cb="2"/><line nr="1303" mi="0" ci="11" mb="0" cb="4"/><line nr="1304" mi="0" ci="2" mb="0" cb="0"/><line nr="1307" mi="0" ci="2" mb="0" cb="0"/><line nr="1311" mi="0" ci="10" mb="0" cb="2"/><line nr="1312" mi="0" ci="11" mb="0" cb="4"/><line nr="1313" mi="0" ci="2" mb="0" cb="0"/><line nr="1316" mi="0" ci="2" mb="0" cb="0"/><line nr="1336" mi="0" ci="5" mb="0" cb="0"/><line nr="1337" mi="0" ci="3" mb="0" cb="2"/><line nr="1338" mi="0" ci="7" mb="0" cb="2"/><line nr="1340" mi="0" ci="6" mb="0" cb="0"/><line nr="1359" mi="0" ci="5" mb="0" cb="0"/><line nr="1360" mi="0" ci="3" mb="0" cb="2"/><line nr="1361" mi="0" ci="7" mb="0" cb="2"/><line nr="1363" mi="0" ci="4" mb="0" cb="2"/><line nr="1364" mi="0" ci="3" mb="0" cb="0"/><line nr="1365" mi="0" ci="8" mb="0" cb="2"/><line nr="1366" mi="0" ci="5" mb="0" cb="0"/><line nr="1367" mi="0" ci="7" mb="0" cb="0"/><line nr="1369" mi="0" ci="9" mb="0" cb="0"/><line nr="1388" mi="0" ci="5" mb="0" cb="0"/><line nr="1389" mi="0" ci="3" mb="0" cb="2"/><line nr="1390" mi="0" ci="7" mb="0" cb="2"/><line nr="1392" mi="0" ci="4" mb="0" cb="2"/><line nr="1393" mi="0" ci="3" mb="0" cb="0"/><line nr="1394" mi="0" ci="11" mb="0" cb="2"/><line nr="1396" mi="0" ci="5" mb="0" cb="0"/><line nr="1415" mi="0" ci="5" mb="0" cb="0"/><line nr="1416" mi="0" ci="3" mb="0" cb="2"/><line nr="1417" mi="0" ci="7" mb="0" cb="2"/><line nr="1419" mi="0" ci="8" mb="0" cb="0"/><line nr="1432" mi="5" ci="0" mb="0" cb="0"/><line nr="1446" mi="0" ci="6" mb="0" cb="0"/><line nr="1447" mi="0" ci="8" mb="0" cb="0"/><line nr="1448" mi="0" ci="4" mb="0" cb="0"/><line nr="1449" mi="0" ci="2" mb="0" cb="2"/><line nr="1450" mi="0" ci="11" mb="0" cb="0"/><line nr="1452" mi="0" ci="8" mb="0" cb="0"/><line nr="1453" mi="0" ci="6" mb="0" cb="4"/><line nr="1454" mi="0" ci="1" mb="0" cb="0"/><line nr="1455" mi="0" ci="5" mb="0" cb="0"/><line nr="1456" mi="0" ci="9" mb="0" cb="0"/><line nr="1458" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="71" covered="1765"/><counter type="BRANCH" missed="14" covered="230"/><counter type="LINE" missed="9" covered="360"/><counter type="COMPLEXITY" missed="14" covered="177"/><counter type="METHOD" missed="2" covered="67"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClassMethods.java"><line nr="21" mi="0" ci="20" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="9" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="11" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="11" mb="0" cb="0"/><line nr="155" mi="3" ci="3" mb="1" cb="1"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="10" mb="1" cb="3"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="11" mb="0" cb="4"/><line nr="186" mi="3" ci="0" mb="0" cb="0"/><line nr="187" mi="12" ci="0" mb="4" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="3" ci="0" mb="0" cb="0"/><line nr="218" mi="3" ci="0" mb="0" cb="0"/><line nr="219" mi="9" ci="0" mb="2" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="9" mb="0" cb="2"/><line nr="249" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="1" ci="9" mb="1" cb="1"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="11" mb="0" cb="2"/><line nr="273" mi="12" ci="0" mb="0" cb="0"/><line nr="275" mi="5" ci="0" mb="0" cb="0"/><line nr="276" mi="9" ci="0" mb="2" cb="0"/><line nr="277" mi="4" ci="0" mb="0" cb="0"/><line nr="279" mi="2" ci="0" mb="0" cb="0"/><line nr="290" mi="12" ci="0" mb="0" cb="0"/><line nr="292" mi="2" ci="0" mb="0" cb="0"/><line nr="293" mi="9" ci="0" mb="2" cb="0"/><line nr="294" mi="1" ci="0" mb="0" cb="0"/><line nr="296" mi="2" ci="0" mb="0" cb="0"/><line nr="310" mi="0" ci="3" mb="0" cb="0"/><line nr="311" mi="0" ci="4" mb="0" cb="0"/><line nr="312" mi="0" ci="3" mb="0" cb="0"/><line nr="313" mi="0" ci="9" mb="0" cb="2"/><line nr="314" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="2" mb="0" cb="0"/><line nr="321" mi="0" ci="3" mb="0" cb="0"/><line nr="322" mi="0" ci="5" mb="0" cb="0"/><line nr="323" mi="0" ci="16" mb="0" cb="2"/><line nr="324" mi="0" ci="3" mb="0" cb="0"/><line nr="326" mi="0" ci="1" mb="0" cb="0"/><line nr="336" mi="3" ci="0" mb="0" cb="0"/><line nr="337" mi="4" ci="0" mb="0" cb="0"/><line nr="350" mi="3" ci="0" mb="0" cb="0"/><line nr="351" mi="3" ci="0" mb="2" cb="0"/><line nr="352" mi="4" ci="0" mb="0" cb="0"/><line nr="354" mi="3" ci="0" mb="0" cb="0"/><line nr="367" mi="3" ci="0" mb="0" cb="0"/><line nr="368" mi="4" ci="0" mb="0" cb="0"/><line nr="381" mi="0" ci="3" mb="0" cb="0"/><line nr="382" mi="0" ci="3" mb="1" cb="1"/><line nr="383" mi="4" ci="0" mb="0" cb="0"/><line nr="385" mi="0" ci="3" mb="0" cb="0"/><line nr="414" mi="0" ci="2" mb="0" cb="2"/><line nr="415" mi="0" ci="2" mb="0" cb="0"/><line nr="416" mi="0" ci="4" mb="0" cb="2"/><line nr="417" mi="0" ci="5" mb="0" cb="0"/><line nr="418" mi="0" ci="6" mb="0" cb="2"/><line nr="419" mi="0" ci="7" mb="0" cb="0"/><line nr="420" mi="0" ci="6" mb="0" cb="2"/><line nr="421" mi="0" ci="7" mb="0" cb="0"/><line nr="422" mi="0" ci="4" mb="0" cb="2"/><line nr="423" mi="0" ci="3" mb="0" cb="0"/><line nr="425" mi="0" ci="4" mb="0" cb="0"/><line nr="438" mi="0" ci="11" mb="0" cb="2"/><line nr="439" mi="0" ci="4" mb="0" cb="0"/><line nr="440" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="159" covered="281"/><counter type="BRANCH" missed="16" covered="30"/><counter type="LINE" missed="32" covered="56"/><counter type="COMPLEXITY" missed="20" covered="28"/><counter type="METHOD" missed="10" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayType.java"><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="11" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="2"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="2"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="8" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="0"/><line nr="159" mi="0" ci="6" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="184" mi="0" ci="6" mb="0" cb="0"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="9" mb="0" cb="0"/><line nr="203" mi="0" ci="9" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="1" cb="1"/><line nr="218" mi="5" ci="0" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="11" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="9" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="7" mb="0" cb="0"/><line nr="238" mi="0" ci="9" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="0" ci="6" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="2"/><line nr="245" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="7" mb="0" cb="2"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="8" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="0" cb="0"/><line nr="258" mi="0" ci="7" mb="0" cb="2"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="292"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="64"/><counter type="COMPLEXITY" missed="1" covered="25"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Tuple2.java"><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModulePrivate.java"/><sourcefile name="ObjectMethods.java"><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="9" mb="0" cb="4"/><line nr="79" mi="0" ci="9" mb="0" cb="4"/><line nr="89" mi="0" ci="9" mb="0" cb="4"/><line nr="99" mi="0" ci="9" mb="0" cb="4"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="11" mb="0" cb="4"/><line nr="123" mi="0" ci="9" mb="0" cb="4"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="9" mb="0" cb="4"/><line nr="151" mi="0" ci="9" mb="0" cb="4"/><line nr="152" mi="0" ci="7" mb="0" cb="2"/><line nr="153" mi="0" ci="9" mb="0" cb="6"/><line nr="154" mi="0" ci="13" mb="0" cb="6"/><line nr="155" mi="0" ci="14" mb="0" cb="6"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="0" ci="9" mb="1" cb="3"/><line nr="186" mi="0" ci="9" mb="0" cb="4"/><line nr="187" mi="0" ci="9" mb="0" cb="4"/><line nr="188" mi="0" ci="9" mb="0" cb="4"/><line nr="189" mi="0" ci="9" mb="0" cb="4"/><line nr="190" mi="0" ci="7" mb="0" cb="2"/><line nr="191" mi="0" ci="13" mb="1" cb="7"/><line nr="195" mi="0" ci="3" mb="0" cb="2"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="2"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="12" mb="1" cb="3"/><line nr="214" mi="0" ci="3" mb="0" cb="2"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="221" mi="0" ci="11" mb="1" cb="3"/><line nr="234" mi="2" ci="0" mb="2" cb="0"/><line nr="235" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="6" ci="0" mb="2" cb="0"/><line nr="237" mi="5" ci="0" mb="0" cb="0"/><line nr="238" mi="6" ci="0" mb="2" cb="0"/><line nr="239" mi="3" ci="0" mb="2" cb="0"/><line nr="240" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="5" ci="0" mb="0" cb="0"/><line nr="243" mi="6" ci="0" mb="2" cb="0"/><line nr="244" mi="5" ci="0" mb="0" cb="0"/><line nr="245" mi="11" ci="0" mb="4" cb="0"/><line nr="247" mi="2" ci="0" mb="0" cb="0"/><line nr="279" mi="0" ci="7" mb="0" cb="4"/><line nr="280" mi="0" ci="5" mb="0" cb="4"/><line nr="281" mi="0" ci="4" mb="0" cb="2"/><line nr="282" mi="0" ci="5" mb="0" cb="2"/><line nr="295" mi="0" ci="7" mb="0" cb="4"/><line nr="296" mi="0" ci="5" mb="0" cb="4"/><line nr="297" mi="0" ci="4" mb="0" cb="2"/><line nr="298" mi="0" ci="5" mb="0" cb="2"/><line nr="312" mi="0" ci="3" mb="0" cb="2"/><line nr="313" mi="0" ci="2" mb="0" cb="0"/><line nr="316" mi="0" ci="6" mb="0" cb="2"/><line nr="317" mi="0" ci="2" mb="0" cb="0"/><line nr="318" mi="0" ci="9" mb="0" cb="2"/><line nr="319" mi="0" ci="7" mb="0" cb="0"/><line nr="320" mi="0" ci="2" mb="0" cb="0"/><line nr="321" mi="0" ci="6" mb="0" cb="2"/><line nr="322" mi="0" ci="2" mb="0" cb="0"/><line nr="323" mi="0" ci="11" mb="0" cb="2"/><line nr="324" mi="0" ci="8" mb="0" cb="0"/><line nr="325" mi="0" ci="8" mb="0" cb="0"/><line nr="326" mi="0" ci="2" mb="0" cb="0"/><line nr="327" mi="0" ci="6" mb="0" cb="2"/><line nr="328" mi="0" ci="2" mb="0" cb="0"/><line nr="329" mi="0" ci="17" mb="0" cb="2"/><line nr="330" mi="0" ci="7" mb="0" cb="0"/><line nr="332" mi="0" ci="4" mb="0" cb="2"/><line nr="333" mi="0" ci="4" mb="0" cb="0"/><line nr="335" mi="0" ci="3" mb="0" cb="0"/><line nr="337" mi="0" ci="2" mb="0" cb="0"/><line nr="367" mi="0" ci="2" mb="0" cb="2"/><line nr="368" mi="0" ci="2" mb="0" cb="0"/><line nr="371" mi="0" ci="6" mb="0" cb="2"/><line nr="372" mi="0" ci="3" mb="0" cb="0"/><line nr="373" mi="0" ci="3" mb="0" cb="2"/><line nr="374" mi="0" ci="8" mb="0" cb="0"/><line nr="376" mi="0" ci="6" mb="0" cb="2"/><line nr="377" mi="0" ci="3" mb="0" cb="0"/><line nr="378" mi="0" ci="9" mb="0" cb="2"/><line nr="379" mi="0" ci="7" mb="0" cb="0"/><line nr="380" mi="0" ci="2" mb="0" cb="0"/><line nr="381" mi="0" ci="6" mb="0" cb="2"/><line nr="382" mi="0" ci="3" mb="0" cb="0"/><line nr="383" mi="0" ci="9" mb="0" cb="2"/><line nr="384" mi="0" ci="7" mb="0" cb="0"/><line nr="385" mi="0" ci="2" mb="0" cb="0"/><line nr="386" mi="0" ci="6" mb="0" cb="2"/><line nr="387" mi="0" ci="3" mb="0" cb="0"/><line nr="388" mi="0" ci="11" mb="0" cb="2"/><line nr="389" mi="0" ci="8" mb="0" cb="0"/><line nr="390" mi="0" ci="8" mb="0" cb="0"/><line nr="391" mi="0" ci="2" mb="0" cb="0"/><line nr="392" mi="0" ci="6" mb="0" cb="2"/><line nr="393" mi="0" ci="4" mb="0" cb="0"/><line nr="394" mi="0" ci="17" mb="0" cb="2"/><line nr="395" mi="0" ci="7" mb="0" cb="0"/><line nr="397" mi="0" ci="4" mb="0" cb="2"/><line nr="398" mi="0" ci="4" mb="0" cb="0"/><line nr="399" mi="0" ci="3" mb="0" cb="2"/><line nr="400" mi="0" ci="4" mb="0" cb="0"/><line nr="402" mi="0" ci="6" mb="0" cb="2"/><line nr="403" mi="0" ci="3" mb="0" cb="0"/><line nr="404" mi="0" ci="7" mb="0" cb="4"/><line nr="405" mi="0" ci="9" mb="0" cb="0"/><line nr="407" mi="0" ci="6" mb="0" cb="2"/><line nr="408" mi="0" ci="3" mb="0" cb="0"/><line nr="409" mi="0" ci="7" mb="0" cb="4"/><line nr="410" mi="0" ci="9" mb="0" cb="0"/><line nr="413" mi="0" ci="3" mb="0" cb="0"/><line nr="415" mi="0" ci="2" mb="0" cb="0"/><line nr="426" mi="0" ci="2" mb="0" cb="2"/><line nr="427" mi="0" ci="2" mb="0" cb="0"/><line nr="429" mi="0" ci="2" mb="0" cb="0"/><line nr="430" mi="0" ci="16" mb="0" cb="2"/><line nr="431" mi="0" ci="7" mb="0" cb="0"/><line nr="433" mi="0" ci="2" mb="0" cb="0"/><line nr="444" mi="0" ci="6" mb="0" cb="2"/><line nr="460" mi="0" ci="4" mb="0" cb="0"/><line nr="461" mi="0" ci="7" mb="0" cb="2"/><line nr="474" mi="0" ci="7" mb="0" cb="2"/><line nr="490" mi="0" ci="12" mb="0" cb="2"/><line nr="504" mi="0" ci="4" mb="0" cb="0"/><line nr="505" mi="0" ci="8" mb="0" cb="2"/><line nr="519" mi="0" ci="4" mb="0" cb="0"/><line nr="520" mi="0" ci="8" mb="0" cb="2"/><line nr="539" mi="0" ci="5" mb="0" cb="0"/><line nr="559" mi="0" ci="8" mb="0" cb="2"/><line nr="574" mi="0" ci="5" mb="0" cb="0"/><line nr="590" mi="0" ci="9" mb="0" cb="2"/><line nr="607" mi="0" ci="8" mb="0" cb="2"/><line nr="631" mi="0" ci="9" mb="0" cb="2"/><line nr="659" mi="0" ci="9" mb="0" cb="2"/><line nr="673" mi="0" ci="8" mb="0" cb="2"/><line nr="696" mi="0" ci="9" mb="0" cb="2"/><line nr="716" mi="0" ci="9" mb="0" cb="2"/><line nr="728" mi="0" ci="7" mb="0" cb="2"/><line nr="739" mi="0" ci="5" mb="0" cb="0"/><line nr="750" mi="0" ci="5" mb="0" cb="0"/><line nr="761" mi="0" ci="5" mb="0" cb="0"/><line nr="772" mi="0" ci="5" mb="0" cb="0"/><line nr="782" mi="0" ci="6" mb="0" cb="0"/><line nr="792" mi="0" ci="6" mb="0" cb="0"/><line nr="802" mi="0" ci="6" mb="0" cb="0"/><line nr="812" mi="0" ci="6" mb="0" cb="0"/><line nr="822" mi="0" ci="6" mb="0" cb="0"/><line nr="832" mi="0" ci="6" mb="0" cb="0"/><line nr="842" mi="0" ci="6" mb="0" cb="0"/><line nr="853" mi="0" ci="5" mb="0" cb="0"/><line nr="857" mi="0" ci="6" mb="0" cb="4"/><line nr="858" mi="0" ci="6" mb="0" cb="0"/><line nr="859" mi="0" ci="6" mb="0" cb="4"/><line nr="860" mi="0" ci="6" mb="0" cb="0"/><line nr="861" mi="0" ci="6" mb="0" cb="4"/><line nr="862" mi="0" ci="6" mb="0" cb="0"/><line nr="863" mi="0" ci="6" mb="1" cb="3"/><line nr="864" mi="0" ci="6" mb="0" cb="0"/><line nr="866" mi="0" ci="4" mb="0" cb="0"/><line nr="870" mi="0" ci="5" mb="0" cb="2"/><line nr="871" mi="0" ci="8" mb="0" cb="2"/><line nr="872" mi="0" ci="8" mb="1" cb="1"/><line nr="873" mi="2" ci="0" mb="0" cb="0"/><line nr="876" mi="0" ci="2" mb="0" cb="0"/><line nr="878" mi="0" ci="2" mb="0" cb="0"/><line nr="882" mi="0" ci="5" mb="1" cb="1"/><line nr="883" mi="0" ci="3" mb="0" cb="0"/><line nr="884" mi="0" ci="3" mb="0" cb="0"/><line nr="885" mi="0" ci="3" mb="0" cb="2"/><line nr="886" mi="0" ci="9" mb="2" cb="2"/><line nr="887" mi="2" ci="0" mb="0" cb="0"/><line nr="890" mi="0" ci="2" mb="0" cb="0"/><line nr="892" mi="2" ci="0" mb="0" cb="0"/><line nr="896" mi="0" ci="8" mb="0" cb="0"/><line nr="897" mi="0" ci="8" mb="0" cb="0"/><line nr="898" mi="0" ci="5" mb="0" cb="2"/><line nr="899" mi="0" ci="2" mb="0" cb="0"/><line nr="900" mi="0" ci="4" mb="0" cb="2"/><line nr="901" mi="0" ci="2" mb="0" cb="0"/><line nr="903" mi="0" ci="9" mb="0" cb="2"/><line nr="904" mi="0" ci="2" mb="0" cb="0"/><line nr="905" mi="0" ci="9" mb="0" cb="2"/><line nr="906" mi="0" ci="4" mb="0" cb="2"/><line nr="907" mi="0" ci="2" mb="0" cb="0"/><line nr="908" mi="0" ci="4" mb="0" cb="0"/><line nr="909" mi="0" ci="1" mb="0" cb="0"/><line nr="911" mi="0" ci="1" mb="0" cb="0"/><line nr="912" mi="0" ci="2" mb="0" cb="2"/><line nr="913" mi="0" ci="2" mb="0" cb="0"/><line nr="915" mi="0" ci="1" mb="0" cb="0"/><line nr="916" mi="0" ci="2" mb="0" cb="0"/><line nr="920" mi="0" ci="5" mb="0" cb="2"/><line nr="921" mi="0" ci="10" mb="0" cb="2"/><line nr="922" mi="0" ci="12" mb="1" cb="3"/><line nr="923" mi="0" ci="2" mb="0" cb="0"/><line nr="925" mi="0" ci="1" mb="0" cb="0"/><line nr="926" mi="0" ci="2" mb="0" cb="0"/><line nr="928" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="67" covered="1072"/><counter type="BRANCH" missed="24" covered="248"/><counter type="LINE" missed="17" covered="187"/><counter type="COMPLEXITY" missed="20" covered="172"/><counter type="METHOD" missed="3" covered="53"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MathMethods.java"><line nr="34" mi="0" ci="23" mb="0" cb="0"/><line nr="35" mi="0" ci="10" mb="0" cb="2"/><line nr="36" mi="0" ci="12" mb="0" cb="2"/><line nr="37" mi="0" ci="12" mb="0" cb="2"/><line nr="38" mi="0" ci="12" mb="0" cb="2"/><line nr="39" mi="0" ci="14" mb="0" cb="2"/><line nr="40" mi="0" ci="12" mb="0" cb="2"/><line nr="41" mi="0" ci="11" mb="0" cb="2"/><line nr="42" mi="0" ci="11" mb="0" cb="2"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="10" mb="0" cb="0"/><line nr="121" mi="0" ci="10" mb="0" cb="0"/><line nr="143" mi="0" ci="11" mb="0" cb="2"/><line nr="144" mi="0" ci="11" mb="0" cb="2"/><line nr="145" mi="0" ci="9" mb="0" cb="2"/><line nr="158" mi="0" ci="7" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="172" mi="0" ci="11" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="11" mb="0" cb="0"/><line nr="187" mi="0" ci="10" mb="0" cb="2"/><line nr="199" mi="0" ci="11" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="2"/><line nr="202" mi="0" ci="10" mb="0" cb="2"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="215" mi="0" ci="11" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="2"/><line nr="218" mi="0" ci="12" mb="0" cb="2"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="7" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="6" mb="0" cb="0"/><line nr="253" mi="0" ci="7" mb="0" cb="0"/><line nr="254" mi="0" ci="5" mb="0" cb="0"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="6" mb="0" cb="0"/><line nr="270" mi="0" ci="7" mb="0" cb="0"/><line nr="271" mi="0" ci="4" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="284" mi="0" ci="7" mb="0" cb="0"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="4" mb="0" cb="0"/><line nr="298" mi="0" ci="7" mb="0" cb="0"/><line nr="299" mi="0" ci="5" mb="0" cb="0"/><line nr="300" mi="0" ci="4" mb="0" cb="0"/><line nr="301" mi="0" ci="6" mb="0" cb="0"/><line nr="314" mi="0" ci="7" mb="0" cb="0"/><line nr="315" mi="0" ci="5" mb="0" cb="0"/><line nr="316" mi="0" ci="4" mb="0" cb="0"/><line nr="317" mi="0" ci="25" mb="0" cb="0"/><line nr="331" mi="0" ci="7" mb="0" cb="0"/><line nr="332" mi="0" ci="5" mb="0" cb="0"/><line nr="333" mi="0" ci="4" mb="0" cb="0"/><line nr="334" mi="0" ci="25" mb="0" cb="0"/><line nr="351" mi="0" ci="7" mb="0" cb="0"/><line nr="352" mi="0" ci="5" mb="0" cb="0"/><line nr="353" mi="0" ci="4" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="355" mi="0" ci="6" mb="0" cb="0"/><line nr="356" mi="0" ci="5" mb="0" cb="0"/><line nr="358" mi="0" ci="7" mb="0" cb="2"/><line nr="359" mi="0" ci="4" mb="0" cb="0"/><line nr="360" mi="0" ci="7" mb="0" cb="2"/><line nr="361" mi="0" ci="6" mb="0" cb="0"/><line nr="362" mi="0" ci="7" mb="0" cb="2"/><line nr="363" mi="0" ci="4" mb="0" cb="0"/><line nr="364" mi="0" ci="4" mb="0" cb="2"/><line nr="365" mi="0" ci="1" mb="0" cb="0"/><line nr="367" mi="0" ci="10" mb="0" cb="0"/><line nr="371" mi="0" ci="2" mb="0" cb="0"/><line nr="386" mi="0" ci="7" mb="0" cb="0"/><line nr="387" mi="0" ci="5" mb="0" cb="0"/><line nr="388" mi="0" ci="4" mb="0" cb="0"/><line nr="389" mi="0" ci="4" mb="0" cb="0"/><line nr="390" mi="0" ci="6" mb="0" cb="0"/><line nr="391" mi="0" ci="5" mb="0" cb="0"/><line nr="392" mi="0" ci="7" mb="0" cb="2"/><line nr="393" mi="0" ci="4" mb="0" cb="0"/><line nr="394" mi="0" ci="7" mb="0" cb="2"/><line nr="395" mi="0" ci="6" mb="0" cb="0"/><line nr="396" mi="0" ci="7" mb="0" cb="2"/><line nr="397" mi="0" ci="4" mb="0" cb="0"/><line nr="398" mi="0" ci="4" mb="0" cb="2"/><line nr="399" mi="0" ci="11" mb="0" cb="0"/><line nr="401" mi="0" ci="8" mb="0" cb="0"/><line nr="406" mi="0" ci="2" mb="0" cb="0"/><line nr="422" mi="0" ci="7" mb="0" cb="0"/><line nr="423" mi="0" ci="5" mb="0" cb="0"/><line nr="424" mi="0" ci="4" mb="0" cb="0"/><line nr="425" mi="0" ci="4" mb="0" cb="0"/><line nr="426" mi="0" ci="6" mb="0" cb="0"/><line nr="427" mi="0" ci="6" mb="0" cb="0"/><line nr="429" mi="0" ci="7" mb="0" cb="2"/><line nr="430" mi="0" ci="4" mb="0" cb="0"/><line nr="431" mi="0" ci="7" mb="0" cb="2"/><line nr="432" mi="0" ci="6" mb="0" cb="0"/><line nr="433" mi="0" ci="7" mb="0" cb="2"/><line nr="434" mi="0" ci="4" mb="0" cb="0"/><line nr="435" mi="0" ci="4" mb="0" cb="2"/><line nr="436" mi="0" ci="1" mb="0" cb="0"/><line nr="438" mi="0" ci="10" mb="0" cb="0"/><line nr="442" mi="0" ci="2" mb="0" cb="0"/><line nr="458" mi="0" ci="7" mb="0" cb="0"/><line nr="459" mi="0" ci="5" mb="0" cb="0"/><line nr="460" mi="0" ci="4" mb="0" cb="0"/><line nr="461" mi="0" ci="4" mb="0" cb="0"/><line nr="462" mi="0" ci="6" mb="0" cb="0"/><line nr="463" mi="0" ci="6" mb="0" cb="0"/><line nr="464" mi="0" ci="7" mb="0" cb="2"/><line nr="465" mi="0" ci="4" mb="0" cb="0"/><line nr="466" mi="0" ci="7" mb="0" cb="2"/><line nr="467" mi="0" ci="6" mb="0" cb="0"/><line nr="468" mi="0" ci="7" mb="0" cb="2"/><line nr="469" mi="0" ci="4" mb="0" cb="0"/><line nr="470" mi="0" ci="4" mb="0" cb="2"/><line nr="471" mi="0" ci="11" mb="0" cb="0"/><line nr="473" mi="0" ci="8" mb="0" cb="0"/><line nr="478" mi="0" ci="2" mb="0" cb="0"/><line nr="493" mi="0" ci="7" mb="0" cb="0"/><line nr="494" mi="0" ci="5" mb="0" cb="0"/><line nr="495" mi="0" ci="4" mb="0" cb="0"/><line nr="496" mi="0" ci="4" mb="0" cb="0"/><line nr="497" mi="0" ci="6" mb="0" cb="0"/><line nr="498" mi="0" ci="5" mb="0" cb="0"/><line nr="500" mi="0" ci="7" mb="0" cb="2"/><line nr="501" mi="0" ci="4" mb="0" cb="0"/><line nr="502" mi="0" ci="7" mb="0" cb="2"/><line nr="503" mi="0" ci="6" mb="0" cb="0"/><line nr="504" mi="0" ci="7" mb="0" cb="2"/><line nr="505" mi="0" ci="4" mb="0" cb="0"/><line nr="506" mi="0" ci="4" mb="0" cb="2"/><line nr="507" mi="0" ci="1" mb="0" cb="0"/><line nr="509" mi="0" ci="10" mb="0" cb="0"/><line nr="513" mi="0" ci="2" mb="0" cb="0"/><line nr="528" mi="0" ci="7" mb="0" cb="0"/><line nr="529" mi="0" ci="5" mb="0" cb="0"/><line nr="530" mi="0" ci="4" mb="0" cb="0"/><line nr="531" mi="0" ci="4" mb="0" cb="0"/><line nr="532" mi="0" ci="6" mb="0" cb="0"/><line nr="533" mi="0" ci="5" mb="0" cb="0"/><line nr="534" mi="0" ci="7" mb="0" cb="2"/><line nr="535" mi="0" ci="4" mb="0" cb="0"/><line nr="536" mi="0" ci="7" mb="0" cb="2"/><line nr="537" mi="0" ci="6" mb="0" cb="0"/><line nr="538" mi="0" ci="7" mb="0" cb="2"/><line nr="539" mi="0" ci="4" mb="0" cb="0"/><line nr="540" mi="0" ci="4" mb="0" cb="2"/><line nr="541" mi="0" ci="11" mb="0" cb="0"/><line nr="543" mi="0" ci="8" mb="0" cb="0"/><line nr="548" mi="0" ci="2" mb="0" cb="0"/><line nr="564" mi="0" ci="7" mb="0" cb="0"/><line nr="565" mi="0" ci="5" mb="0" cb="0"/><line nr="566" mi="0" ci="4" mb="0" cb="0"/><line nr="567" mi="0" ci="4" mb="0" cb="0"/><line nr="568" mi="0" ci="6" mb="0" cb="0"/><line nr="569" mi="0" ci="6" mb="0" cb="0"/><line nr="571" mi="0" ci="7" mb="0" cb="2"/><line nr="572" mi="0" ci="4" mb="0" cb="0"/><line nr="573" mi="0" ci="7" mb="0" cb="2"/><line nr="574" mi="0" ci="6" mb="0" cb="0"/><line nr="575" mi="0" ci="7" mb="0" cb="2"/><line nr="576" mi="0" ci="4" mb="0" cb="0"/><line nr="577" mi="0" ci="4" mb="0" cb="2"/><line nr="578" mi="0" ci="1" mb="0" cb="0"/><line nr="580" mi="0" ci="10" mb="0" cb="0"/><line nr="584" mi="0" ci="2" mb="0" cb="0"/><line nr="600" mi="0" ci="7" mb="0" cb="0"/><line nr="601" mi="0" ci="5" mb="0" cb="0"/><line nr="602" mi="0" ci="4" mb="0" cb="0"/><line nr="603" mi="0" ci="4" mb="0" cb="0"/><line nr="604" mi="0" ci="6" mb="0" cb="0"/><line nr="605" mi="0" ci="6" mb="0" cb="0"/><line nr="606" mi="0" ci="7" mb="0" cb="2"/><line nr="607" mi="0" ci="4" mb="0" cb="0"/><line nr="608" mi="0" ci="7" mb="0" cb="2"/><line nr="609" mi="0" ci="6" mb="0" cb="0"/><line nr="610" mi="0" ci="7" mb="0" cb="2"/><line nr="611" mi="0" ci="4" mb="0" cb="0"/><line nr="612" mi="0" ci="4" mb="0" cb="2"/><line nr="613" mi="0" ci="11" mb="0" cb="0"/><line nr="615" mi="0" ci="8" mb="0" cb="0"/><line nr="620" mi="0" ci="2" mb="0" cb="0"/><line nr="628" mi="0" ci="5" mb="0" cb="0"/><line nr="629" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="1218"/><counter type="BRANCH" missed="0" covered="96"/><counter type="LINE" missed="2" covered="194"/><counter type="COMPLEXITY" missed="1" covered="86"/><counter type="METHOD" missed="1" covered="38"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayMethods.java"><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="8" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="10" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="9" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="12" mb="0" cb="0"/><line nr="123" mi="0" ci="10" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="7" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="7" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="1" cb="1"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="8" mb="0" cb="2"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="15" mb="0" cb="0"/><line nr="136" mi="0" ci="7" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="9" mb="0" cb="2"/><line nr="177" mi="9" ci="0" mb="2" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="8" mb="0" cb="2"/><line nr="192" mi="0" ci="5" mb="0" cb="2"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="9" mb="0" cb="2"/><line nr="211" mi="0" ci="5" mb="0" cb="2"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="2"/><line nr="231" mi="0" ci="9" mb="0" cb="2"/><line nr="232" mi="0" ci="4" mb="0" cb="2"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="8" mb="0" cb="2"/><line nr="238" mi="0" ci="6" mb="0" cb="2"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="2" mb="0" cb="2"/><line nr="259" mi="1" ci="9" mb="1" cb="1"/><line nr="260" mi="0" ci="4" mb="0" cb="2"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="0" ci="9" mb="0" cb="2"/><line nr="266" mi="0" ci="6" mb="0" cb="2"/><line nr="267" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="4" mb="0" cb="0"/><line nr="287" mi="0" ci="8" mb="0" cb="2"/><line nr="288" mi="0" ci="5" mb="0" cb="2"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="292" mi="0" ci="2" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="0" ci="4" mb="0" cb="0"/><line nr="307" mi="0" ci="9" mb="1" cb="1"/><line nr="308" mi="0" ci="5" mb="0" cb="2"/><line nr="309" mi="0" ci="2" mb="0" cb="0"/><line nr="312" mi="2" ci="0" mb="0" cb="0"/><line nr="326" mi="0" ci="5" mb="0" cb="0"/><line nr="353" mi="0" ci="4" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="355" mi="0" ci="4" mb="0" cb="0"/><line nr="356" mi="0" ci="4" mb="0" cb="0"/><line nr="357" mi="0" ci="2" mb="0" cb="0"/><line nr="358" mi="0" ci="2" mb="0" cb="0"/><line nr="359" mi="0" ci="1" mb="0" cb="0"/><line nr="360" mi="0" ci="1" mb="0" cb="0"/><line nr="361" mi="0" ci="3" mb="0" cb="0"/><line nr="374" mi="0" ci="4" mb="0" cb="0"/><line nr="375" mi="0" ci="4" mb="0" cb="0"/><line nr="376" mi="0" ci="4" mb="0" cb="0"/><line nr="377" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="1" mb="0" cb="0"/><line nr="379" mi="0" ci="1" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="0" cb="0"/><line nr="391" mi="0" ci="6" mb="0" cb="0"/><line nr="404" mi="0" ci="5" mb="0" cb="0"/><line nr="405" mi="0" ci="5" mb="0" cb="0"/><line nr="409" mi="0" ci="16" mb="0" cb="2"/><line nr="410" mi="0" ci="6" mb="0" cb="0"/><line nr="411" mi="0" ci="8" mb="0" cb="0"/><line nr="412" mi="0" ci="4" mb="0" cb="0"/><line nr="414" mi="0" ci="2" mb="0" cb="0"/><line nr="424" mi="0" ci="6" mb="0" cb="0"/><line nr="436" mi="0" ci="4" mb="0" cb="0"/><line nr="437" mi="0" ci="6" mb="0" cb="0"/><line nr="438" mi="0" ci="5" mb="0" cb="0"/><line nr="442" mi="0" ci="16" mb="0" cb="2"/><line nr="443" mi="0" ci="6" mb="0" cb="0"/><line nr="444" mi="0" ci="8" mb="0" cb="0"/><line nr="445" mi="0" ci="4" mb="0" cb="0"/><line nr="447" mi="0" ci="2" mb="0" cb="0"/><line nr="450" mi="0" ci="15" mb="0" cb="0"/><line nr="451" mi="0" ci="2" mb="0" cb="0"/><line nr="452" mi="0" ci="4" mb="0" cb="0"/><line nr="453" mi="4" ci="0" mb="0" cb="0"/><line nr="454" mi="4" ci="0" mb="0" cb="0"/><line nr="455" mi="4" ci="0" mb="0" cb="0"/><line nr="456" mi="4" ci="0" mb="0" cb="0"/><line nr="457" mi="4" ci="0" mb="0" cb="0"/><line nr="458" mi="4" ci="0" mb="0" cb="0"/><line nr="469" mi="0" ci="5" mb="0" cb="0"/><line nr="470" mi="3" ci="3" mb="1" cb="1"/><line nr="471" mi="3" ci="0" mb="0" cb="0"/><line nr="473" mi="0" ci="8" mb="0" cb="0"/><line nr="485" mi="5" ci="0" mb="0" cb="0"/><line nr="486" mi="6" ci="0" mb="2" cb="0"/><line nr="487" mi="3" ci="0" mb="0" cb="0"/><line nr="489" mi="8" ci="0" mb="0" cb="0"/><line nr="500" mi="0" ci="4" mb="0" cb="0"/><line nr="512" mi="0" ci="5" mb="0" cb="0"/><line nr="527" mi="0" ci="5" mb="0" cb="0"/><line nr="540" mi="0" ci="7" mb="0" cb="0"/><line nr="556" mi="0" ci="7" mb="0" cb="0"/><line nr="580" mi="0" ci="4" mb="0" cb="0"/><line nr="581" mi="0" ci="4" mb="0" cb="0"/><line nr="582" mi="0" ci="11" mb="0" cb="0"/><line nr="583" mi="0" ci="11" mb="0" cb="2"/><line nr="584" mi="0" ci="7" mb="0" cb="0"/><line nr="585" mi="0" ci="6" mb="0" cb="0"/><line nr="586" mi="0" ci="2" mb="0" cb="0"/><line nr="587" mi="0" ci="3" mb="0" cb="0"/><line nr="601" mi="0" ci="7" mb="0" cb="0"/><line nr="616" mi="0" ci="5" mb="0" cb="0"/><line nr="633" mi="0" ci="7" mb="0" cb="0"/><line nr="650" mi="0" ci="5" mb="0" cb="0"/><line nr="668" mi="0" ci="7" mb="0" cb="0"/><line nr="694" mi="0" ci="3" mb="0" cb="0"/><line nr="695" mi="0" ci="3" mb="0" cb="0"/><line nr="696" mi="0" ci="4" mb="0" cb="0"/><line nr="697" mi="0" ci="4" mb="0" cb="0"/><line nr="698" mi="0" ci="4" mb="0" cb="0"/><line nr="699" mi="0" ci="10" mb="0" cb="0"/><line nr="700" mi="0" ci="9" mb="0" cb="2"/><line nr="701" mi="0" ci="7" mb="0" cb="0"/><line nr="702" mi="0" ci="6" mb="0" cb="0"/><line nr="703" mi="0" ci="6" mb="0" cb="0"/><line nr="704" mi="0" ci="2" mb="0" cb="0"/><line nr="705" mi="0" ci="3" mb="0" cb="0"/><line nr="718" mi="0" ci="4" mb="0" cb="0"/><line nr="732" mi="0" ci="3" mb="0" cb="0"/><line nr="733" mi="0" ci="7" mb="0" cb="0"/><line nr="750" mi="0" ci="5" mb="0" cb="0"/><line nr="765" mi="0" ci="7" mb="0" cb="0"/><line nr="783" mi="0" ci="7" mb="0" cb="0"/><line nr="808" mi="0" ci="4" mb="0" cb="0"/><line nr="809" mi="0" ci="4" mb="0" cb="0"/><line nr="810" mi="0" ci="4" mb="0" cb="0"/><line nr="811" mi="0" ci="11" mb="0" cb="0"/><line nr="812" mi="0" ci="11" mb="0" cb="2"/><line nr="813" mi="0" ci="7" mb="0" cb="0"/><line nr="814" mi="0" ci="6" mb="0" cb="0"/><line nr="815" mi="0" ci="2" mb="0" cb="0"/><line nr="816" mi="0" ci="3" mb="0" cb="0"/><line nr="829" mi="0" ci="5" mb="0" cb="0"/><line nr="840" mi="0" ci="5" mb="0" cb="0"/><line nr="851" mi="0" ci="5" mb="0" cb="0"/><line nr="862" mi="0" ci="5" mb="0" cb="0"/><line nr="873" mi="0" ci="5" mb="0" cb="0"/><line nr="884" mi="0" ci="5" mb="0" cb="0"/><line nr="897" mi="0" ci="4" mb="0" cb="0"/><line nr="898" mi="0" ci="7" mb="0" cb="0"/><line nr="899" mi="0" ci="4" mb="0" cb="0"/><line nr="900" mi="0" ci="7" mb="0" cb="0"/><line nr="901" mi="0" ci="2" mb="0" cb="0"/><line nr="917" mi="0" ci="4" mb="0" cb="0"/><line nr="918" mi="0" ci="4" mb="0" cb="0"/><line nr="919" mi="0" ci="8" mb="0" cb="0"/><line nr="920" mi="0" ci="4" mb="0" cb="0"/><line nr="921" mi="0" ci="4" mb="0" cb="0"/><line nr="922" mi="0" ci="4" mb="0" cb="0"/><line nr="923" mi="0" ci="7" mb="0" cb="0"/><line nr="924" mi="0" ci="10" mb="0" cb="0"/><line nr="925" mi="0" ci="2" mb="0" cb="0"/><line nr="935" mi="0" ci="4" mb="0" cb="0"/><line nr="945" mi="0" ci="4" mb="0" cb="0"/><line nr="955" mi="0" ci="4" mb="0" cb="0"/><line nr="965" mi="0" ci="4" mb="0" cb="0"/><line nr="975" mi="0" ci="4" mb="0" cb="0"/><line nr="985" mi="0" ci="4" mb="0" cb="0"/><line nr="995" mi="0" ci="4" mb="0" cb="0"/><line nr="1005" mi="0" ci="4" mb="0" cb="0"/><line nr="1017" mi="0" ci="3" mb="0" cb="0"/><line nr="1018" mi="0" ci="14" mb="0" cb="0"/><line nr="1029" mi="0" ci="4" mb="0" cb="0"/><line nr="1039" mi="0" ci="13" mb="0" cb="0"/><line nr="1049" mi="0" ci="13" mb="0" cb="0"/><line nr="1059" mi="0" ci="13" mb="0" cb="0"/><line nr="1069" mi="0" ci="7" mb="0" cb="0"/><line nr="1070" mi="0" ci="8" mb="0" cb="2"/><line nr="1071" mi="0" ci="7" mb="0" cb="0"/><line nr="1073" mi="0" ci="2" mb="0" cb="0"/><line nr="1083" mi="0" ci="7" mb="0" cb="0"/><line nr="1084" mi="0" ci="8" mb="0" cb="2"/><line nr="1085" mi="0" ci="7" mb="0" cb="0"/><line nr="1087" mi="0" ci="2" mb="0" cb="0"/><line nr="1097" mi="0" ci="7" mb="0" cb="0"/><line nr="1098" mi="0" ci="8" mb="0" cb="2"/><line nr="1099" mi="0" ci="7" mb="0" cb="0"/><line nr="1101" mi="0" ci="2" mb="0" cb="0"/><line nr="1111" mi="0" ci="7" mb="0" cb="0"/><line nr="1112" mi="0" ci="8" mb="0" cb="2"/><line nr="1113" mi="0" ci="7" mb="0" cb="0"/><line nr="1115" mi="0" ci="2" mb="0" cb="0"/><line nr="1125" mi="0" ci="7" mb="0" cb="0"/><line nr="1126" mi="0" ci="8" mb="0" cb="2"/><line nr="1127" mi="0" ci="7" mb="0" cb="0"/><line nr="1129" mi="0" ci="2" mb="0" cb="0"/><line nr="1134" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="79" covered="1173"/><counter type="BRANCH" missed="8" covered="60"/><counter type="LINE" missed="16" covered="221"/><counter type="COMPLEXITY" missed="16" covered="101"/><counter type="METHOD" missed="10" covered="73"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AnyTuple2.java"><line nr="17" mi="6" ci="9" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="1" cb="3"/><line nr="60" mi="0" ci="7" mb="1" cb="1"/><line nr="61" mi="0" ci="5" mb="0" cb="2"/><counter type="INSTRUCTION" missed="6" covered="43"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MutableInt.java"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="0" ci="9" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="116" mi="0" ci="9" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="2"/><line nr="156" mi="0" ci="9" mb="0" cb="2"/><line nr="166" mi="0" ci="8" mb="0" cb="2"/><line nr="176" mi="0" ci="9" mb="0" cb="2"/><line nr="187" mi="0" ci="8" mb="0" cb="2"/><line nr="198" mi="0" ci="9" mb="0" cb="2"/><line nr="209" mi="0" ci="8" mb="0" cb="2"/><line nr="220" mi="0" ci="9" mb="0" cb="2"/><line nr="231" mi="0" ci="8" mb="0" cb="2"/><line nr="242" mi="0" ci="9" mb="0" cb="2"/><line nr="253" mi="0" ci="8" mb="0" cb="2"/><line nr="264" mi="0" ci="9" mb="0" cb="2"/><line nr="273" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="0" cb="2"/><line nr="296" mi="0" ci="2" mb="0" cb="0"/><line nr="297" mi="0" ci="2" mb="0" cb="2"/><line nr="298" mi="0" ci="2" mb="0" cb="0"/><line nr="299" mi="0" ci="6" mb="0" cb="2"/><line nr="300" mi="0" ci="9" mb="0" cb="2"/><line nr="301" mi="0" ci="6" mb="0" cb="2"/><line nr="302" mi="0" ci="9" mb="0" cb="2"/><line nr="303" mi="0" ci="6" mb="0" cb="2"/><line nr="304" mi="0" ci="9" mb="0" cb="2"/><line nr="305" mi="0" ci="6" mb="0" cb="2"/><line nr="306" mi="0" ci="9" mb="0" cb="2"/><line nr="308" mi="0" ci="2" mb="0" cb="0"/><line nr="317" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="281"/><counter type="BRANCH" missed="0" covered="44"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="0" covered="52"/><counter type="METHOD" missed="0" covered="30"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InvokeMethods.java"><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="9" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="7" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="2" cb="0"/><line nr="130" mi="6" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="2" cb="0"/><line nr="140" mi="7" ci="0" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="83" covered="46"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="25" covered="13"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IOMethods.java"><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="11" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="12" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="11" mb="0" cb="0"/><line nr="126" mi="0" ci="18" mb="0" cb="0"/><line nr="127" mi="1" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="11" mb="0" cb="0"/><line nr="142" mi="0" ci="18" mb="0" cb="0"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="11" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="12" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="1" mb="0" cb="0"/><line nr="231" mi="0" ci="7" mb="0" cb="0"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="7" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="2"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="240" mi="0" ci="8" mb="0" cb="0"/><line nr="242" mi="1" ci="0" mb="0" cb="0"/><line nr="243" mi="3" ci="0" mb="0" cb="0"/><line nr="244" mi="0" ci="1" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><line nr="276" mi="0" ci="4" mb="0" cb="0"/><line nr="296" mi="0" ci="5" mb="0" cb="0"/><line nr="318" mi="0" ci="4" mb="0" cb="0"/><line nr="319" mi="0" ci="6" mb="0" cb="0"/><line nr="345" mi="0" ci="4" mb="0" cb="0"/><line nr="346" mi="0" ci="4" mb="0" cb="0"/><line nr="347" mi="0" ci="6" mb="0" cb="0"/><line nr="363" mi="3" ci="0" mb="0" cb="0"/><line nr="381" mi="4" ci="0" mb="0" cb="0"/><line nr="401" mi="4" ci="0" mb="0" cb="0"/><line nr="402" mi="6" ci="0" mb="0" cb="0"/><line nr="425" mi="0" ci="4" mb="0" cb="0"/><line nr="426" mi="0" ci="6" mb="0" cb="0"/><line nr="454" mi="0" ci="4" mb="0" cb="0"/><line nr="455" mi="0" ci="4" mb="0" cb="0"/><line nr="456" mi="0" ci="6" mb="0" cb="0"/><line nr="466" mi="0" ci="11" mb="0" cb="0"/><line nr="467" mi="0" ci="5" mb="0" cb="2"/><line nr="469" mi="0" ci="2" mb="0" cb="0"/><line nr="470" mi="1" ci="0" mb="0" cb="0"/><line nr="471" mi="3" ci="0" mb="0" cb="0"/><line nr="472" mi="0" ci="1" mb="0" cb="0"/><line nr="474" mi="0" ci="1" mb="0" cb="0"/><line nr="483" mi="0" ci="6" mb="0" cb="0"/><line nr="484" mi="0" ci="5" mb="0" cb="2"/><line nr="486" mi="0" ci="2" mb="0" cb="0"/><line nr="487" mi="1" ci="0" mb="0" cb="0"/><line nr="488" mi="3" ci="0" mb="0" cb="0"/><line nr="489" mi="0" ci="1" mb="0" cb="0"/><line nr="491" mi="0" ci="1" mb="0" cb="0"/><line nr="494" mi="0" ci="6" mb="0" cb="0"/><line nr="496" mi="0" ci="3" mb="0" cb="0"/><line nr="500" mi="0" ci="2" mb="0" cb="0"/><line nr="501" mi="0" ci="2" mb="0" cb="0"/><line nr="507" mi="0" ci="2" mb="0" cb="0"/><line nr="508" mi="0" ci="2" mb="0" cb="0"/><line nr="511" mi="0" ci="1" mb="0" cb="0"/><line nr="516" mi="0" ci="5" mb="0" cb="0"/><line nr="517" mi="0" ci="5" mb="0" cb="0"/><line nr="518" mi="0" ci="2" mb="0" cb="2"/><line nr="519" mi="0" ci="7" mb="1" cb="3"/><line nr="520" mi="0" ci="10" mb="0" cb="0"/><line nr="521" mi="0" ci="3" mb="0" cb="0"/><line nr="523" mi="0" ci="11" mb="0" cb="0"/><line nr="526" mi="0" ci="2" mb="0" cb="0"/><line nr="532" mi="0" ci="5" mb="0" cb="0"/><line nr="533" mi="0" ci="5" mb="0" cb="0"/><line nr="534" mi="0" ci="2" mb="0" cb="2"/><line nr="535" mi="0" ci="11" mb="0" cb="0"/><line nr="537" mi="0" ci="2" mb="0" cb="0"/><line nr="540" mi="0" ci="5" mb="0" cb="0"/><line nr="545" mi="0" ci="2" mb="0" cb="0"/><line nr="546" mi="0" ci="6" mb="0" cb="0"/><line nr="547" mi="0" ci="3" mb="0" cb="2"/><line nr="548" mi="0" ci="3" mb="0" cb="0"/><line nr="550" mi="0" ci="4" mb="0" cb="0"/><line nr="552" mi="0" ci="4" mb="0" cb="0"/><line nr="554" mi="0" ci="1" mb="0" cb="0"/><line nr="556" mi="0" ci="2" mb="0" cb="0"/><line nr="558" mi="0" ci="2" mb="0" cb="0"/><line nr="560" mi="0" ci="7" mb="0" cb="0"/><line nr="565" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="55" covered="479"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="22" covered="99"/><counter type="COMPLEXITY" missed="5" covered="39"/><counter type="METHOD" missed="4" covered="32"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="InvokeException.java"><line nr="21" mi="0" ci="7" mb="0" cb="0"/><line nr="34" mi="0" ci="8" mb="0" cb="0"/><line nr="35" mi="0" ci="9" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ResizeMethod.java"><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="2"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="0"/><line nr="153" mi="0" ci="7" mb="0" cb="0"/><line nr="154" mi="0" ci="7" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="2"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="4"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="4" ci="5" mb="1" cb="3"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="7" mb="0" cb="4"/><line nr="166" mi="7" ci="0" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="2"/><line nr="171" mi="7" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="2"/><line nr="176" mi="7" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="11" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="6" mb="0" cb="4"/><line nr="182" mi="0" ci="7" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="155"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="3" covered="29"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExceptionMethods.java"><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="2"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="17" mb="0" cb="2"/><line nr="79" mi="0" ci="16" mb="0" cb="2"/><line nr="80" mi="0" ci="5" mb="1" cb="1"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="2"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="18" mb="0" cb="2"/><line nr="109" mi="0" ci="16" mb="0" cb="2"/><line nr="110" mi="0" ci="5" mb="0" cb="2"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="0" ci="11" mb="0" cb="2"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="3" ci="3" mb="1" cb="1"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="2"/><line nr="185" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="8" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="6" mb="0" cb="2"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="3" ci="3" mb="1" cb="1"/><line nr="244" mi="2" ci="0" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><line nr="247" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="2"/><line nr="249" mi="0" ci="6" mb="0" cb="0"/><line nr="251" mi="0" ci="8" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="287" mi="0" ci="7" mb="0" cb="0"/><line nr="301" mi="0" ci="4" mb="0" cb="0"/><line nr="317" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="308"/><counter type="BRANCH" missed="3" covered="25"/><counter type="LINE" missed="6" covered="57"/><counter type="COMPLEXITY" missed="4" covered="25"/><counter type="METHOD" missed="1" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="627" covered="8108"/><counter type="BRANCH" missed="78" covered="828"/><counter type="LINE" missed="143" covered="1511"/><counter type="COMPLEXITY" missed="98" covered="804"/><counter type="METHOD" missed="40" covered="408"/><counter type="CLASS" missed="0" covered="16"/></package><package name="org/klojang/util/collection"><class name="org/klojang/util/collection/IntArrayList" sourcefilename="IntArrayList.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="49"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(II)V" line="61"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILorg/klojang/util/ResizeMethod;F)V" line="75"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/klojang/util/collection/IntList;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)I" line="107"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(II)V" line="113"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(I)Ljava/util/OptionalInt;" line="119"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastIndexOf" desc="(I)Ljava/util/OptionalInt;" line="129"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(I)V" line="139"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(II)V" line="144"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Lorg/klojang/util/collection/IntList;)V" line="157"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="([I)V" line="162"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(ILorg/klojang/util/collection/IntList;)V" line="167"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(I[I)V" line="182"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeByIndex" desc="(I)V" line="197"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeByValue" desc="(I)Z" line="206"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAll" desc="(Lorg/klojang/util/collection/IntList;)Z" line="216"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAll" desc="([I)Z" line="222"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAll" desc="(Ljava/util/Collection;)Z" line="228"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retainAll" desc="(Lorg/klojang/util/collection/IntList;)Z" line="240"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retainAll" desc="([I)Z" line="246"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retainAll" desc="(Ljava/util/Collection;)Z" line="252"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="264"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="capacity" desc="()I" line="269"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(I)V" line="274"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sort" desc="()V" line="287"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortDescending" desc="()V" line="292"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="299"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="304"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trim" desc="(I)V" line="309"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="()[I" line="314"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="(II)[I" line="324"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toGenericList" desc="()Ljava/util/List;" line="335"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stream" desc="()Ljava/util/stream/IntStream;" line="340"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEach" desc="(Ljava/util/function/IntConsumer;)V" line="345"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEachThrowing" desc="(Lorg/klojang/check/fallible/FallibleIntConsumer;)V" line="351"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="358"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="371"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="380"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="increaseCapacity" desc="(I)V" line="384"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBuffer" desc="(Lorg/klojang/util/collection/IntList;)[I" line="393"><counter type="INSTRUCTION" missed="3" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkIndex" desc="(I)V" line="401"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkIndexInclusive" desc="(I)V" line="405"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$retainAll$1" desc="(I)[Ljava/lang/Integer;" line="255"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$removeAll$0" desc="(I)[Ljava/lang/Integer;" line="231"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="30" covered="737"/><counter type="BRANCH" missed="5" covered="51"/><counter type="LINE" missed="8" covered="163"/><counter type="COMPLEXITY" missed="5" covered="69"/><counter type="METHOD" missed="1" covered="45"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/util/collection/UnmodifiableIntList" sourcefilename="UnmodifiableIntList.java"><method name="&lt;init&gt;" desc="([I)V" line="26"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)I" line="32"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(II)V" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(I)Ljava/util/OptionalInt;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastIndexOf" desc="(I)Ljava/util/OptionalInt;" line="50"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(I)V" line="55"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(II)V" line="60"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Lorg/klojang/util/collection/IntList;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="([I)V" line="70"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(ILorg/klojang/util/collection/IntList;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(I[I)V" line="80"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeByIndex" desc="(I)V" line="85"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeByValue" desc="(I)Z" line="90"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAll" desc="(Lorg/klojang/util/collection/IntList;)Z" line="95"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAll" desc="([I)Z" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAll" desc="(Ljava/util/Collection;)Z" line="105"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retainAll" desc="(Lorg/klojang/util/collection/IntList;)Z" line="110"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retainAll" desc="([I)Z" line="115"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retainAll" desc="(Ljava/util/Collection;)Z" line="120"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="125"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="130"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="135"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trim" desc="(I)V" line="141"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="capacity" desc="()I" line="147"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(I)V" line="152"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sort" desc="()V" line="158"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortDescending" desc="()V" line="163"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="()[I" line="168"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="(II)[I" line="175"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toGenericList" desc="()Ljava/util/List;" line="186"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stream" desc="()Ljava/util/stream/IntStream;" line="191"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEach" desc="(Ljava/util/function/IntConsumer;)V" line="196"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEachThrowing" desc="(Lorg/klojang/check/fallible/FallibleIntConsumer;)V" line="202"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="209"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="223"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="230"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="236"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="290"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="1" covered="62"/><counter type="COMPLEXITY" missed="1" covered="46"/><counter type="METHOD" missed="0" covered="37"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/util/collection/IntList" sourcefilename="IntList.java"><method name="copyOf" desc="(Ljava/util/Collection;)Lorg/klojang/util/collection/IntList;" line="33"><counter type="INSTRUCTION" missed="2" covered="47"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyOf" desc="(Lorg/klojang/util/collection/IntList;)Lorg/klojang/util/collection/IntList;" line="53"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="()Lorg/klojang/util/collection/IntList;" line="68"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(I)Lorg/klojang/util/collection/IntList;" line="78"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(II)Lorg/klojang/util/collection/IntList;" line="90"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(III)Lorg/klojang/util/collection/IntList;" line="103"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(IIII)Lorg/klojang/util/collection/IntList;" line="117"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(IIIII)Lorg/klojang/util/collection/IntList;" line="132"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([I)Lorg/klojang/util/collection/IntList;" line="148"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofElements" desc="([I)Lorg/klojang/util/collection/IntList;" line="158"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="169"/><counter type="BRANCH" missed="8" covered="4"/><counter type="LINE" missed="8" covered="30"/><counter type="COMPLEXITY" missed="6" covered="10"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/util/collection/EnumToIntMap" sourcefilename="EnumToIntMap.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;I)V" line="68"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/util/function/ToIntFunction;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;ILjava/util/function/ToIntFunction;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/klojang/util/collection/EnumToIntMap;)V" line="113"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/klojang/util/collection/EnumToIntMap;I)V" line="129"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsKey" desc="(Ljava/lang/Enum;)Z" line="145"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsValue" desc="(I)Z" line="158"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Enum;)I" line="173"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOrDefault" desc="(Ljava/lang/Enum;I)I" line="186"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/lang/Enum;I)I" line="200"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/Enum;I)Lorg/klojang/util/collection/EnumToIntMap;" line="215"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Lorg/klojang/util/collection/EnumToIntMap;)V" line="229"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Ljava/util/Map;)V" line="242"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toGenericMap" desc="()Ljava/util/Map;" line="254"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Enum;)I" line="266"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keySet" desc="()Ljava/util/Set;" line="279"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="values" desc="()Ljava/util/Collection;" line="289"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intValues" desc="()Lorg/klojang/util/collection/IntList;" line="298"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entrySet" desc="()Ljava/util/Set;" line="315"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="330"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEach" desc="(Ljava/util/function/ObjIntConsumer;)V" line="341"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="350"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="360"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enumClass" desc="()Ljava/lang/Class;" line="370"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keyAbsentValue" desc="()I" line="379"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="389"><counter type="INSTRUCTION" missed="4" covered="53"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="407"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="412"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyEntries" desc="(Lorg/klojang/util/collection/EnumToIntMap;)V" line="416"><counter type="INSTRUCTION" missed="12" covered="56"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="streamKeys" desc="()Ljava/util/stream/Stream;" line="431"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assign" desc="(Ljava/lang/Enum;I)V" line="435"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Ljava/lang/Enum;)I" line="439"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$streamKeys$9" desc="(Ljava/lang/Enum;)Z" line="431"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$forEach$8" desc="(Ljava/util/function/ObjIntConsumer;Ljava/lang/Enum;)V" line="341"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$entrySet$7" desc="(I)[Ljava/util/AbstractMap$SimpleImmutableEntry;" line="317"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$entrySet$6" desc="(Ljava/lang/Enum;)Ljava/util/AbstractMap$SimpleImmutableEntry;" line="316"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toGenericMap$5" desc="(I)[Ljava/util/Map$Entry;" line="254"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$putAll$4" desc="(Ljava/util/Map;)V" line="244"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$containsValue$3" desc="(II)Z" line="159"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$containsKey$2" desc="(Ljava/lang/Enum;)Ljava/lang/Boolean;" line="145"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Ljava/util/function/ToIntFunction;Ljava/lang/Enum;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(ILjava/lang/Enum;)I" line="68"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="536"/><counter type="BRANCH" missed="3" covered="29"/><counter type="LINE" missed="3" covered="96"/><counter type="COMPLEXITY" missed="3" covered="56"/><counter type="METHOD" missed="0" covered="43"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="UnmodifiableIntList.java"><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="8" mb="0" cb="2"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="9" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="1" cb="1"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="7" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="8" mb="0" cb="0"/><line nr="196" mi="0" ci="7" mb="0" cb="0"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="17" mb="0" cb="2"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="2"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="6" mb="0" cb="2"/><line nr="212" mi="0" ci="6" mb="0" cb="0"/><line nr="213" mi="0" ci="6" mb="0" cb="2"/><line nr="214" mi="0" ci="21" mb="0" cb="4"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="2"/><line nr="224" mi="0" ci="6" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="2"/><line nr="231" mi="0" ci="6" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="290"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="1" covered="62"/><counter type="COMPLEXITY" missed="1" covered="46"/><counter type="METHOD" missed="0" covered="37"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntList.java"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="1" cb="1"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="2"/><line nr="40" mi="0" ci="13" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="4" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="2" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="11" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="15" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="19" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="1" cb="1"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="169"/><counter type="BRANCH" missed="8" covered="4"/><counter type="LINE" missed="8" covered="30"/><counter type="COMPLEXITY" missed="6" covered="10"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EnumToIntMap.java"><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="14" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="10" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="21" mb="0" cb="2"/><line nr="158" mi="0" ci="7" mb="0" cb="0"/><line nr="159" mi="0" ci="16" mb="0" cb="2"/><line nr="173" mi="0" ci="7" mb="0" cb="0"/><line nr="186" mi="0" ci="10" mb="0" cb="2"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="8" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="8" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="1" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="0" ci="7" mb="0" cb="0"/><line nr="244" mi="0" ci="6" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="254" mi="0" ci="10" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="0" cb="0"/><line nr="268" mi="0" ci="5" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="279" mi="0" ci="6" mb="0" cb="0"/><line nr="289" mi="0" ci="9" mb="0" cb="0"/><line nr="298" mi="0" ci="7" mb="0" cb="0"/><line nr="299" mi="0" ci="17" mb="0" cb="2"/><line nr="300" mi="0" ci="4" mb="0" cb="2"/><line nr="301" mi="0" ci="3" mb="0" cb="0"/><line nr="304" mi="0" ci="2" mb="0" cb="0"/><line nr="315" mi="0" ci="4" mb="0" cb="0"/><line nr="316" mi="0" ci="11" mb="0" cb="0"/><line nr="317" mi="0" ci="6" mb="0" cb="0"/><line nr="318" mi="0" ci="4" mb="0" cb="0"/><line nr="330" mi="0" ci="7" mb="0" cb="2"/><line nr="341" mi="0" ci="13" mb="0" cb="0"/><line nr="342" mi="0" ci="1" mb="0" cb="0"/><line nr="350" mi="0" ci="5" mb="0" cb="0"/><line nr="351" mi="0" ci="1" mb="0" cb="0"/><line nr="360" mi="0" ci="5" mb="0" cb="0"/><line nr="370" mi="0" ci="6" mb="0" cb="0"/><line nr="379" mi="0" ci="3" mb="0" cb="0"/><line nr="389" mi="0" ci="3" mb="0" cb="2"/><line nr="390" mi="0" ci="2" mb="0" cb="0"/><line nr="392" mi="0" ci="11" mb="2" cb="2"/><line nr="393" mi="0" ci="5" mb="0" cb="2"/><line nr="394" mi="0" ci="6" mb="0" cb="0"/><line nr="396" mi="0" ci="9" mb="0" cb="2"/><line nr="397" mi="0" ci="15" mb="1" cb="1"/><line nr="398" mi="2" ci="0" mb="0" cb="0"/><line nr="401" mi="0" ci="2" mb="0" cb="0"/><line nr="403" mi="2" ci="0" mb="0" cb="0"/><line nr="407" mi="0" ci="4" mb="0" cb="0"/><line nr="412" mi="0" ci="5" mb="0" cb="0"/><line nr="416" mi="0" ci="7" mb="0" cb="0"/><line nr="417" mi="0" ci="4" mb="0" cb="0"/><line nr="419" mi="0" ci="5" mb="0" cb="2"/><line nr="420" mi="0" ci="11" mb="0" cb="0"/><line nr="421" mi="0" ci="5" mb="0" cb="2"/><line nr="422" mi="12" ci="0" mb="0" cb="0"/><line nr="424" mi="0" ci="9" mb="0" cb="2"/><line nr="425" mi="0" ci="14" mb="0" cb="0"/><line nr="428" mi="0" ci="1" mb="0" cb="0"/><line nr="431" mi="0" ci="19" mb="0" cb="2"/><line nr="435" mi="0" ci="6" mb="0" cb="0"/><line nr="436" mi="0" ci="1" mb="0" cb="0"/><line nr="439" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="536"/><counter type="BRANCH" missed="3" covered="29"/><counter type="LINE" missed="3" covered="96"/><counter type="COMPLEXITY" missed="3" covered="56"/><counter type="METHOD" missed="0" covered="43"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntArrayList.java"><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="2"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="9" mb="0" cb="0"/><line nr="96" mi="0" ci="10" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="8" mb="0" cb="2"/><line nr="120" mi="0" ci="6" mb="0" cb="2"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="9" mb="0" cb="2"/><line nr="130" mi="0" ci="6" mb="0" cb="2"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="2"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="2"/><line nr="149" mi="0" ci="13" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="9" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="2"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="2"/><line nr="174" mi="0" ci="14" mb="0" cb="0"/><line nr="176" mi="0" ci="9" mb="0" cb="0"/><line nr="177" mi="0" ci="7" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="9" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="2"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="2"/><line nr="189" mi="0" ci="14" mb="0" cb="0"/><line nr="191" mi="0" ci="8" mb="0" cb="0"/><line nr="192" mi="0" ci="7" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="6" mb="0" cb="2"/><line nr="199" mi="0" ci="15" mb="0" cb="0"/><line nr="201" mi="0" ci="6" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="2"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="6" mb="0" cb="0"/><line nr="230" mi="0" ci="4" mb="0" cb="2"/><line nr="231" mi="0" ci="10" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="6" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="0" cb="2"/><line nr="255" mi="0" ci="10" mb="0" cb="0"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="269" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="5" mb="0" cb="2"/><line nr="275" mi="0" ci="3" mb="0" cb="0"/><line nr="276" mi="0" ci="3" mb="0" cb="0"/><line nr="277" mi="0" ci="4" mb="0" cb="0"/><line nr="278" mi="0" ci="6" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><line nr="280" mi="0" ci="8" mb="0" cb="0"/><line nr="281" mi="0" ci="3" mb="0" cb="0"/><line nr="283" mi="0" ci="1" mb="0" cb="0"/><line nr="287" mi="0" ci="6" mb="0" cb="0"/><line nr="288" mi="0" ci="1" mb="0" cb="0"/><line nr="292" mi="0" ci="2" mb="0" cb="0"/><line nr="294" mi="0" ci="7" mb="0" cb="0"/><line nr="295" mi="0" ci="1" mb="0" cb="0"/><line nr="299" mi="0" ci="7" mb="0" cb="2"/><line nr="304" mi="0" ci="3" mb="0" cb="0"/><line nr="305" mi="0" ci="1" mb="0" cb="0"/><line nr="309" mi="0" ci="13" mb="0" cb="0"/><line nr="310" mi="0" ci="1" mb="0" cb="0"/><line nr="314" mi="0" ci="3" mb="1" cb="1"/><line nr="315" mi="2" ci="0" mb="0" cb="0"/><line nr="317" mi="0" ci="4" mb="0" cb="0"/><line nr="318" mi="0" ci="8" mb="0" cb="0"/><line nr="319" mi="0" ci="2" mb="0" cb="0"/><line nr="324" mi="6" ci="0" mb="0" cb="0"/><line nr="325" mi="5" ci="0" mb="2" cb="0"/><line nr="326" mi="2" ci="0" mb="0" cb="0"/><line nr="328" mi="3" ci="0" mb="0" cb="0"/><line nr="329" mi="7" ci="0" mb="0" cb="0"/><line nr="330" mi="2" ci="0" mb="0" cb="0"/><line nr="335" mi="0" ci="5" mb="0" cb="0"/><line nr="340" mi="0" ci="7" mb="0" cb="0"/><line nr="345" mi="0" ci="4" mb="0" cb="0"/><line nr="346" mi="0" ci="1" mb="0" cb="0"/><line nr="351" mi="0" ci="17" mb="0" cb="2"/><line nr="352" mi="0" ci="3" mb="0" cb="0"/><line nr="354" mi="0" ci="1" mb="0" cb="0"/><line nr="358" mi="0" ci="3" mb="0" cb="2"/><line nr="359" mi="0" ci="2" mb="0" cb="0"/><line nr="360" mi="0" ci="2" mb="0" cb="2"/><line nr="361" mi="0" ci="2" mb="0" cb="0"/><line nr="362" mi="0" ci="6" mb="0" cb="2"/><line nr="363" mi="0" ci="12" mb="0" cb="2"/><line nr="364" mi="0" ci="9" mb="1" cb="1"/><line nr="366" mi="0" ci="2" mb="0" cb="0"/><line nr="371" mi="0" ci="5" mb="0" cb="0"/><line nr="372" mi="0" ci="8" mb="0" cb="2"/><line nr="373" mi="0" ci="9" mb="0" cb="0"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="380" mi="0" ci="7" mb="0" cb="0"/><line nr="384" mi="0" ci="11" mb="0" cb="0"/><line nr="385" mi="0" ci="3" mb="0" cb="0"/><line nr="386" mi="0" ci="8" mb="0" cb="0"/><line nr="387" mi="0" ci="3" mb="0" cb="0"/><line nr="388" mi="0" ci="1" mb="0" cb="0"/><line nr="393" mi="0" ci="7" mb="0" cb="2"/><line nr="394" mi="0" ci="3" mb="0" cb="0"/><line nr="395" mi="0" ci="6" mb="1" cb="1"/><line nr="396" mi="0" ci="3" mb="0" cb="0"/><line nr="397" mi="3" ci="0" mb="0" cb="0"/><line nr="401" mi="0" ci="9" mb="0" cb="0"/><line nr="402" mi="0" ci="1" mb="0" cb="0"/><line nr="405" mi="0" ci="9" mb="0" cb="0"/><line nr="406" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="737"/><counter type="BRANCH" missed="5" covered="51"/><counter type="LINE" missed="8" covered="163"/><counter type="COMPLEXITY" missed="5" covered="69"/><counter type="METHOD" missed="1" covered="45"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="75" covered="1732"/><counter type="BRANCH" missed="17" covered="103"/><counter type="LINE" missed="20" covered="351"/><counter type="COMPLEXITY" missed="15" covered="181"/><counter type="METHOD" missed="2" covered="134"/><counter type="CLASS" missed="0" covered="4"/></package><counter type="INSTRUCTION" missed="885" covered="10086"/><counter type="BRANCH" missed="112" covered="952"/><counter type="LINE" missed="209" covered="1916"/><counter type="COMPLEXITY" missed="155" covered="1005"/><counter type="METHOD" missed="73" covered="554"/><counter type="CLASS" missed="0" covered="23"/></report>